<?xml version='1.0' encoding='utf-8'?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-strict.xsd">
 <file original="xliff-core-1.2-strict.xsd" source-language="en" target-language="it" datatype="plaintext" date="2015-07-16T02:07:27Z">
  <header>
   <phase-group>
    <phase tool-id="tmgmt" phase-name="extraction" process-name="extraction" job-id="27"/>
   </phase-group>
   <tool tool-id="tmgmt" tool-name="Drupal Translation Management Tools"/>
  </header>
  <body>
   <group id="362">
    <note>HTTPS Everywhere FAQ</note>
    <trans-unit id="362][body][0][value" resname="362][body][0][value" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt>This page answers frequently-asked questions about EFF's <bpt id="tjiid362-2">&lt;a href="/https-everywhere"&gt;</bpt>HTTPS Everywhere<ept id="tjiid362-2">&lt;/a&gt;</ept> project. If your question isn't answered below, you can try the resources <bpt id="tjiid362-4">&lt;a href="/https-everywhere/development"&gt;</bpt>listed here<ept id="tjiid362-4">&lt;/a&gt;</ept>.<ept id="tjiid362-1">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt>Questa pagina risponde alle domande frequenti sul progetto <bpt id="tjiid362-2">&lt;a href="/https-everywhere"&gt;</bpt>HTTPS Everywhere<ept id="tjiid362-2">&lt;/a&gt;</ept> dell'EFF. Se non trovate una risposta alla vostra domanda, provate a cercare tra le risorse <bpt id="tjiid362-4">&lt;a href="/https-everywhere/development"&gt;</bpt>elencate qui<ept id="tjiid362-4">&lt;/a&gt;</ept>.<ept id="tjiid362-1">&lt;/p&gt;</ept></target> <note>Body</note>
    </trans-unit>
    <trans-unit id="362][field_questions][0][question" resname="362][field_questions][0][question" approved="yes">
     <source xml:lang="en">What if HTTPS Everywhere breaks some site that I use?</source> <target xml:lang="it" state="translated">Che cosa devo fare se HTTPS Everywhere rende illeggibile un sito che uso?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][0][answer" resname="362][field_questions][0][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-3">&lt;a name="bugs"&gt;</bpt><ept id="tjiid362-3">&lt;/a&gt;</ept><bpt id="tjiid362-5">&lt;p&gt;</bpt>This is occasionally possible because of inconsistent support for HTTPS on sites (e.g., when a site seems to support HTTPS access but makes a few, unpredictable, parts of the site unavailable in HTTPS). If you <bpt id="tjiid362-6">&lt;a href="https://github.com/EFForg/https-everywhere/issues"&gt;</bpt>report the problem to us<ept id="tjiid362-6">&lt;/a&gt;</ept>, we can try to fix it. In the meantime, you can disable the rule affecting that particular site in your own copy of HTTPS Everywhere by clicking on the HTTPS Everywhere toolbar button and unchecking the rule for that site.<ept id="tjiid362-5">&lt;/p&gt;</ept><bpt id="tjiid362-9">&lt;p&gt;</bpt>You can also report the problem to the site, since they have the power to fix it!<ept id="tjiid362-9">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-3">&lt;a name="bugs"&gt;</bpt><ept id="tjiid362-3">&lt;/a&gt;</ept><bpt id="tjiid362-5">&lt;p&gt;</bpt>Questo problema può verificarsi in alcuni casi a causa di un supporto HTTPS usato in modo incoerente in alcuni siti (ad es. quando sembra che un sito supporti l'accesso HTTPS ma alcune sue parti, impossibili da prevedere, sono inaccessibili in HTTPS). Se <bpt id="tjiid362-6">&lt;a href="https://github.com/EFForg/https-everywhere/issues"&gt;</bpt>ci segnalate il problema<ept id="tjiid362-6">&lt;/a&gt;</ept>, cercheremo di risolverlo. Nel frattempo potete disabilitare la regola che interessa quel particolare sito nella vostra copia di HTTPS Everywhere cliccando sul tasto di HTTPS Everywhere nella barra degli strumenti e disabilitando la regola per quel sito.<ept id="tjiid362-5">&lt;/p&gt;</ept><bpt id="tjiid362-9">&lt;p&gt;</bpt>Potete segnalare il problema anche al sito, dal momento che i suoi amministratori hanno il potere di risolverlo!<ept id="tjiid362-9">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][1][question" resname="362][field_questions][1][question" approved="yes">
     <source xml:lang="en">Why is HTTPS Everywhere preventing me from joining this hotel/school/other wireless network?</source> <target xml:lang="it" state="translated">Perché HTTPS Everywhere mi impedisce di collegarmi alla rete wireless di questo albergo/scuola/altro?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][1][answer" resname="362][field_questions][1][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-3">&lt;a name="captiveportal"&gt;</bpt><ept id="tjiid362-3">&lt;/a&gt;</ept><bpt id="tjiid362-5">&lt;p&gt;</bpt>Some wireless networks hijack your HTTP connections when you first join them, in order to demand authentication or simply to try to make you agree to terms of use. HTTPS pages are protected against this type of hijacking, which is as it should be. If you go to a website that isn't protected by HTTPS Everywhere (currently, nytimes.com is one such site) that will allow your connection to be captured and redirected to the authentication or terms of use page.<ept id="tjiid362-5">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-3">&lt;a name="captiveportal"&gt;</bpt><ept id="tjiid362-3">&lt;/a&gt;</ept><bpt id="tjiid362-5">&lt;p&gt;</bpt>Nel momento in cui ci si collega, alcune reti wireless dirottano i collegamenti HTTP per imporre l'autenticazione o semplicemente per chiedervi il consenso alle condizioni del loro servizio. Le pagine HTTPS sono protette da questo tipo di dirottamento, ed è giusto che sia così. Se visitate un sito web che non è protetto da HTTPS Everywhere (al momento nytimes.com è uno di questi siti), la vostra connessione potrà essere catturata e ridiretta alla pagina di autenticazione o a quella delle condizioni del servizio.<ept id="tjiid362-5">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][2][question" resname="362][field_questions][2][question" approved="yes">
     <source xml:lang="en">Will there be a version of HTTPS Everywhere for IE, Safari, or some other browser?</source> <target xml:lang="it" state="translated">In futuro ci sarà una versione di HTTPS Everywhere per IE, Safari o altri browser?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][2][answer" resname="362][field_questions][2][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="platform"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept> As of early 2012, the Safari extension API does not offer a way to perform secure rewriting of http requests to https. But if you happen to know a way to perform secure request rewriting in these browsers, feel free to let us know at <bpt id="tjiid362-4">&lt;tt&gt;</bpt>https-everywhere at EFF.org<ept id="tjiid362-4">&lt;/tt&gt;</ept> (but note that modifying <bpt id="tjiid362-6">&lt;tt&gt;</bpt>document.location<ept id="tjiid362-6">&lt;/tt&gt;</ept> or <bpt id="tjiid362-8">&lt;tt&gt;</bpt>window.location<ept id="tjiid362-8">&lt;/tt&gt;</ept> in JavaScript is not secure).<ept id="tjiid362-1">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="platform"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept>Mentre scriviamo, agli inizi del 2012, le API per estensioni di Safari non danno modo di eseguire un rewrite sicura delle richieste http in richieste https. Ma se per caso sapete come fare un rewrite sicuro delle richieste in questi browser, non esitate a farcelo sapere scrivendo a <bpt id="tjiid362-4">&lt;tt&gt;</bpt>https-everywhere at EFF.org<ept id="tjiid362-4">&lt;/tt&gt;</ept> (notate comunque che modificare <bpt id="tjiid362-6">&lt;tt&gt;</bpt>document.location<ept id="tjiid362-6">&lt;/tt&gt;</ept> o <bpt id="tjiid362-8">&lt;tt&gt;</bpt>window.location<ept id="tjiid362-8">&lt;/tt&gt;</ept> in JavaScript non è sicuro).<ept id="tjiid362-1">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][3][question" resname="362][field_questions][3][question" approved="yes">
     <source xml:lang="en">Why use a whitelist of sites that support HTTPS? Why can't you try to use HTTPS for every last site, and only fall back to HTTP if it isn't available?</source> <target xml:lang="it" state="translated">Perché usare una whitelist di siti che supportano HTTPS? Perché non cercare di usare HTTPS per tutti i siti possibili e ricorrere a HTTP solo se HTTPS non è disponibile?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][3][answer" resname="362][field_questions][3][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="automatic-https"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept> There are several problems with the idea of trying to automatically detect HTTPS on every site. There is no guarantee that sites are going to give the same response via HTTPS that they give via HTTP. As of 2015, Forbes is a good example of this problem: compare these <bpt id="tjiid362-4">&lt;a href="http://forbes.com"&gt;</bpt>HTTP<ept id="tjiid362-4">&lt;/a&gt;</ept> and <bpt id="tjiid362-6">&lt;a href="https://forbes.com"&gt;</bpt>HTTPS<ept id="tjiid362-6">&lt;/a&gt;</ept> responses. Also, it's not possible to test for HTTPS in real time without introducing security vulnerabilities (What should the extension do if the HTTPS connection attempt fails? Falling back to insecure HTTP isn't safe). And in some cases, HTTPS Everywhere has to perform quite complicated transformations on URIs — for example until recently the Wikipedia rule had to turn an address like <bpt id="tjiid362-8">&lt;tt&gt;</bpt>http://en.wikipedia.org/wiki/World_Wide_Web<ept id="tjiid362-8">&lt;/tt&gt;</ept> into one like <bpt id="tjiid362-10">&lt;tt&gt;</bpt>https://secure.wikimedia.org/wikipedia/en/wiki/World_Wide_Web<ept id="tjiid362-10">&lt;/tt&gt;</ept> because HTTPS was not available on Wikipedia's usual domains.<ept id="tjiid362-1">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="automatic-https"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept>Sono diversi i problemi collegati all'idea di cercare di individuare automaticamente HTTPS su tutti i siti. Non è detto che in HTTPS un sito dia la stessa risposta che dà in HTTP. Al 2015, Forbes è un ottimo esempio di questo problema: confrontate la risposta <bpt id="tjiid362-4">&lt;a href="http://forbes.com"&gt;</bpt>HTTP<ept id="tjiid362-4">&lt;/a&gt;</ept> e quella <bpt id="tjiid362-6">&lt;a href="https://forbes.com"&gt;</bpt>HTTPS<ept id="tjiid362-6">&lt;/a&gt;</ept>. Inoltre, è impossibile effettuare test su HTTPS in tempo reale senza esporsi a vulnerabilità di sicurezza (che cosa dovrebbe fare l'estensione se il tentativo di collegamento HTTPS fallisce? Tornare a un collegamento HTTP non sicuro può essere rischioso). In alcuni casi, poi, HTTPS Everywhere deve eseguire trasformazioni piuttosto complesse sugli URI — per esempio fino a poco tempo fa la regola per la Wikipedia doveva trasformare un indirizzo come <bpt id="tjiid362-8">&lt;tt&gt;</bpt>http://en.wikipedia.org/wiki/World_Wide_Web<ept id="tjiid362-8">&lt;/tt&gt;</ept> in uno come <bpt id="tjiid362-10">&lt;tt&gt;</bpt>https://secure.wikimedia.org/wikipedia/en/wiki/World_Wide_Web<ept id="tjiid362-10">&lt;/tt&gt;</ept>  perché HTTPS non era disponibile sui domini consueti della Wikipedia.<ept id="tjiid362-1">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][4][question" resname="362][field_questions][4][question" approved="yes">
     <source xml:lang="en">How do I get rid of/move the HTTPS Everywhere button in the toolbar?</source> <target xml:lang="it" state="translated">Come faccio a eliminare/spostare il tasto di HTTPS Everywhere nella barra degli strumenti?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][4][answer" resname="362][field_questions][4][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="toolbar"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept> The HTTPS Everywhere button is useful because it allows you to see, and disable, a ruleset if it happens to be causing problems with a site. But if you'd rather disable it, go to View-&amp;gt;Toolbars-&amp;gt;Customize, and drag the button out of the toolbar into the Addons bar at the bottom of the page. Then you can hide the Addons bar. (In theory you should be able to drag it into the tray of available icons too, but that may trigger <bpt id="tjiid362-4">&lt;a href="https://trac.torproject.org/projects/tor/ticket/6276"&gt;</bpt>this bug<ept id="tjiid362-4">&lt;/a&gt;</ept>.<ept id="tjiid362-1">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="toolbar"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept>Il tasto di HTTPS Everywhere è utile perché permette di vedere e di disabilitare una serie di regole nel caso in cui creino problemi per un sito. Ma se preferite comunque disabilitarlo, cliccate su Visualizza-&amp;gt;Barre degli strumenti-&amp;gt;Personalizza e trascinate il tasto dalla barra degli strumenti alla barra degli strumenti aggiuntivi più in basso. A quel punto potete nascondere la barra degli strumenti aggiuntivi. (In teoria, dovreste poterlo trascinare anche nel vassoio delle icone disponibili, ma questo potrebbe attivare <bpt id="tjiid362-4">&lt;a href="https://trac.torproject.org/projects/tor/ticket/6276"&gt;</bpt>questo bug<ept id="tjiid362-4">&lt;/a&gt;</ept>.<ept id="tjiid362-1">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][5][question" resname="362][field_questions][5][question" approved="yes">
     <source xml:lang="en">When does HTTPS Everywhere protect me? When does it not protect me?</source> <target xml:lang="it" state="translated">Quand'è che HTTPS Everywhere mi protegge? Quand'è che non mi protegge?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][5][answer" resname="362][field_questions][5][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;a name="where"&gt;</bpt><ept id="tjiid362-1">&lt;/a&gt;</ept> HTTPS Everywhere protects you only when you are using <bpt id="tjiid362-3">&lt;em&gt;</bpt>encrypted portions of supported web sites<ept id="tjiid362-3">&lt;/em&gt;</ept>. On a supported site, it will automatically activate HTTPS encryption for all known supported parts of the site (for some sites, this might be only a portion of the entire site). For example, if your web mail provider does not support HTTPS at all, HTTPS Everywhere can't make your access to your web mail secure. Similarly, if a site allows HTTPS for text but not images, someone might be able to see which images your browser loads and guess what you're accessing. HTTPS Everywhere depends entirely on the security features of the individual web sites that you use; it <bpt id="tjiid362-5">&lt;em&gt;</bpt>activates<ept id="tjiid362-5">&lt;/em&gt;</ept> those security features, but it can't <bpt id="tjiid362-7">&lt;em&gt;</bpt>create<ept id="tjiid362-7">&lt;/em&gt;</ept> them if they don't already exist. If you use a site not supported by HTTPS Everywhere or a site that provides some information in an insecure way, HTTPS Everywhere can't provide additional protection for your use of that site. Please remember to check that a particular site's security is working to the level you expect before sending or receiving confidential information, including passwords. One way to determine what level of protection you're getting when using a particular site is to use a packet-sniffing tool like <bpt id="tjiid362-9">&lt;a href="http://www.wireshark.org/"&gt;</bpt>Wireshark<ept id="tjiid362-9">&lt;/a&gt;</ept> to record your own communications with the site. The resulting view of your communications is about the same as what an eavesdropper on your wifi network or at your ISP would see. This way, you can determine whether some or all of your communications would be protected; however, it may be quite time-consuming to make sense of the Wireshark output with enough care to get a definitive answer. You can also turn on the "Block all HTTP requests" feature for added protection. Instead of loading insecure pages or images, HTTPS Everywhere will block them outright.</source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;a name="where"&gt;</bpt><ept id="tjiid362-1">&lt;/a&gt;</ept>HTTPS Everywhere ti protegge solo quando usi <bpt id="tjiid362-3">&lt;em&gt;</bpt>parti crittate di siti web supportati<ept id="tjiid362-3">&lt;/em&gt;</ept>. . In un sito supportato attiva automaticamente la cifratura HTTPS per tutte le parti supportate note del sito (per alcuni siti questo può essere vero solo per una parte dell'intero sito). Per esempio, se il provider della vostra webmail non supporta HTTPS per nulla, HTTPS Everywhere non può rendere sicuro l'accesso alla vostra webmail. In modo analogo, se un sito permette HTTPS per il testo ma non per le immagini, qualcuno potrebbe essere in grado di vedere quali immagini vengono caricate dal vostro browser e immaginare a quali contenuti state accedendo. HTTPS Everywhere dipende completamente dalle caratteristiche di sicurezza dei singoli siti web che usate: anche se <bpt id="tjiid362-5">&lt;em&gt;</bpt>attiva<ept id="tjiid362-5">&lt;/em&gt;</ept> quelle caratteristiche di sicurezza, non è in grado di <bpt id="tjiid362-7">&lt;em&gt;</bpt>crearle<ept id="tjiid362-7">&lt;/em&gt;</ept> se non esistono già. Se usate un sito che non è supportato da HTTPS Everywhere o che fornisce alcune informazioni in modo insicuro, HTTPS Everywhere non può garantire una protezione aggiuntiva per il vostro uso di quel sito. Ricordate quindi di controllare che la sicurezza di un certo sito funzioni al livello che vi aspettate prima di inviare o ricevere informazioni confidenziali come le password. Un sistema per stabilire quale livello di protezione viene fornito quando usate un sito particolare consiste nell'impiego di uno strumento per sniffare pacchetti come <bpt id="tjiid362-9">&lt;a href="http://www.wireshark.org/"&gt;</bpt>Wireshark<ept id="tjiid362-9">&lt;/a&gt;</ept> per registrare le vostre comunicazioni con il sito. Ne risulterà una visualizzazione delle vostre comunicazioni che è più o meno uguale a quella che otterrebbe qualcuno che le stia intercettando sulla vostra rete wifi o sul vostro ISP. In questo modo potete capire se sarebbero protette solo alcune o tutte le vostre comunicazioni; tuttavia, interpretare i risultati forniti da Wireshark con la cura necessaria a ottenere una risposta definitiva potrebbe richiedere parecchio tempo. Potete anche attivare l'opzione "Blocca tutte le richieste HTTP" per incrementare il livello di protezione. Così, invece di caricare pagine o immagini non sicure, HTTPS Everywhere le bloccherà direttamente.</target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][6][question" resname="362][field_questions][6][question" approved="yes">
     <source xml:lang="en">What does HTTPS Everywhere protect me against?</source> <target xml:lang="it" state="translated">Da che cosa mi protegge HTTPS Everywhere?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][6][answer" resname="362][field_questions][6][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-3">&lt;a name="threats"&gt;</bpt><ept id="tjiid362-3">&lt;/a&gt;</ept><bpt id="tjiid362-5">&lt;p&gt;</bpt>On supported parts of supported sites, HTTPS Everywhere enables the sites' HTTPS protection which can protect you against eavesdropping and tampering with the contents of the site or with the information you send to the site. Ideally, this provides some protection against an attacker learning the content of the information flowing in each direction — for instance, the text of e-mail messages you send or receive through a webmail site, the products you browse or purchase on an e-commerce site, or the particular articles you read on a reference site.<ept id="tjiid362-5">&lt;/p&gt;</ept><bpt id="tjiid362-7">&lt;p&gt;</bpt>However, HTTPS Everywhere <bpt id="tjiid362-8">&lt;strong&gt;</bpt>does not conceal the identities of the sites you access<ept id="tjiid362-8">&lt;/strong&gt;</ept>, the amount of time you spend using them, or the amount of information you upload or download from a particular site. For example, if you access http://www.eff.org/issues/nsa-spying and HTTPS Everywhere rewrites it to https://www.eff.org/issues/nsa-spying, an eavesdropper can still trivially recognize that you are accessing www.eff.org (but might not know which issue you are reading about). In general, the entire hostname part of the URL remains exposed to the eavesdropper because this must be sent repeatedly in unencrypted form while setting up the connection. Another way of saying this is that HTTPS was never designed to conceal the identity of the sites that you visit.<ept id="tjiid362-7">&lt;/p&gt;</ept><bpt id="tjiid362-11">&lt;p&gt;</bpt>Researchers have also shown that it may be possible for someone to figure out more about what you're doing on a site merely through careful observation of the amount of data you upload and download, or the timing patterns of your use of the site. A simple example is that if the site only has one page of a certain total size, anyone downloading exactly that much data from the site is probably accessing that page.<ept id="tjiid362-11">&lt;/p&gt;</ept><bpt id="tjiid362-13">&lt;p&gt;</bpt>If you want to protect yourself against monitoring of the sites you visit, consider using HTTPS Everywhere together with software like <bpt id="tjiid362-14">&lt;a href="https://www.torproject.org/"&gt;</bpt>Tor<ept id="tjiid362-14">&lt;/a&gt;</ept>.<ept id="tjiid362-13">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-3">&lt;a name="threats"&gt;</bpt><ept id="tjiid362-3">&lt;/a&gt;</ept><bpt id="tjiid362-5">&lt;p&gt;</bpt>Nelle parti supportate dei siti supportati, HTTPS Everywhere attiva la protezione HTTPS dei siti che può proteggervi da intercettazioni e manipolazioni dei contenuti del sito o delle informazioni che inviate al sito. A livello ideale, questo garantisce una certa protezioni da un attacco teso a scoprire il contenuto delle informazioni che viaggiano in entrambe le direzioni: per esempio il testo dei messaggi di posta elettronica che inviate o ricevete attraverso un servizio webmail, i prodotti che visualizzate o acquistate su un sito di e-commerce o i particolari articoli che leggete su un sito informativo.<ept id="tjiid362-5">&lt;/p&gt;</ept><bpt id="tjiid362-7">&lt;p&gt;</bpt>Tuttavia, HTTPS Everywhere <bpt id="tjiid362-8">&lt;strong&gt;</bpt>non nasconde l'identità dei siti a cui accedete<ept id="tjiid362-8">&lt;/strong&gt;</ept>, la quantità di tempo che passate a visitarli o la quantità di informazioni che caricate o scaricate da un certo sito. Se per esempio aprite http://www.eff.org/issues/nsa-spying e HTTPS Everywhere riscrive l'indirizzo in https://www.eff.org/issues/nsa-spying, qualcuno che stia intercettando le vostre comunicazioni potrà ancora capire banalmente che state accedendo a www.eff.org (ma potrebbe non capire l'argomento delle vostre letture). In generale, la parte dell'URL che corrisponde allo hostname resta esposta alle intercettazioni perché deve essere inviata ripetutamente in forma non cifrata nel momento in cui si stabilisce il collegamento. In altre parole, HTTPS non è mai stato progettato per nascondere l'identità dei siti che visitate.<ept id="tjiid362-7">&lt;/p&gt;</ept><bpt id="tjiid362-11">&lt;p&gt;</bpt>Alcuni ricercatori hanno anche dimostrato che potrebbe essere possibile ottenere ancora più particolari di quel che fate in un sito semplicemente osservando attentamente la quantità di dati che caricate e scaricate o l'andamento temporale del vostro uso di quel sito. Per fare un esempio semplice, se un sito ha solo una pagina caratterizzata da una certa dimensione complessiva, chiunque scarichi esattamente quella quantità di dati dal sito starà probabilmente accedendo a quella pagina.<ept id="tjiid362-11">&lt;/p&gt;</ept><bpt id="tjiid362-13">&lt;p&gt;</bpt>Se volete proteggervi dal monitoraggio dei siti che visitate, considerate la possibilità di usare HTTPS Everywhere assieme a software come <bpt id="tjiid362-14">&lt;a href="https://www.torproject.org/"&gt;</bpt>Tor<ept id="tjiid362-14">&lt;/a&gt;</ept>.<ept id="tjiid362-13">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][7][question" resname="362][field_questions][7][question" approved="yes">
     <source xml:lang="en">How do I get support for an additional site in HTTPS Everywhere?</source> <target xml:lang="it" state="translated">Come si fa a ottenere il supporto per un nuovo sito in HTTPS Everywhere?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][7][answer" resname="362][field_questions][7][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="sites"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept> You can learn <bpt id="tjiid362-4">&lt;a href="https://www.eff.org/https-everywhere/rulesets"&gt;</bpt>how to write rules<ept id="tjiid362-4">&lt;/a&gt;</ept> that teach HTTPS Everywhere to support new sites. You can install these rules in your own browser or send them to us for possible inclusion in the official version.<ept id="tjiid362-1">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="sites"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept> Potete imparare <bpt id="tjiid362-4">&lt;a href="https://www.eff.org/https-everywhere/rulesets"&gt;</bpt>a scrivere regole<ept id="tjiid362-4">&lt;/a&gt;</ept> che insegnino a HTTPS Everywhere a supportare nuovi siti. Potete installare queste regole nel vostro browser o mandarcele per un'eventuale inclusione nella versione ufficiale.<ept id="tjiid362-1">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][8][question" resname="362][field_questions][8][question" approved="yes">
     <source xml:lang="en">What if the site doesn't support HTTPS, or only supports it for some activities, like entering credit card information?</source> <target xml:lang="it" state="translated">E se il sito non supporta HTTPS o lo supporta solo per certe attività come l'invio di informazioni sulla carta di credito?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][8][answer" resname="362][field_questions][8][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a href="https://letsencrypt.org/"&gt;</bpt>https://letsencrypt.org/<ept id="tjiid362-2">&lt;/a&gt;</ept><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-5">&lt;a name="partial"&gt;</bpt><ept id="tjiid362-5">&lt;/a&gt;</ept><bpt id="tjiid362-7">&lt;a name="amo"&gt;</bpt><ept id="tjiid362-7">&lt;/a&gt;</ept><bpt id="tjiid362-9">&lt;p&gt;</bpt>You could try to contact the site and point out that using HTTPS for all site features is an increasingly common practice nowadays and protects users (and sites) against a variety of Internet attacks. For instance, it defends against the ability of other people on a wifi network to spy on your use of the site or even take over your account. You can also point out that credit card numbers aren't the only information you consider private or sensitive.<ept id="tjiid362-9">&lt;/p&gt;</ept><bpt id="tjiid362-11">&lt;p&gt;</bpt>Sites like Google, Twitter, and Facebook now support HTTPS for non-financial information — for general privacy and security reasons.<ept id="tjiid362-11">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a href="https://letsencrypt.org/"&gt;</bpt>https://letsencrypt.org/<ept id="tjiid362-2">&lt;/a&gt;</ept><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-5">&lt;a name="partial"&gt;</bpt><ept id="tjiid362-5">&lt;/a&gt;</ept><bpt id="tjiid362-7">&lt;a name="amo"&gt;</bpt><ept id="tjiid362-7">&lt;/a&gt;</ept><bpt id="tjiid362-9">&lt;p&gt;</bpt>Potreste provare a contattare il sito e a fargli notare che usare HTTPS per tutte le funzionalità del sito è ormai una pratica sempre più diffusa che protegge gli utenti (e i siti) da tutta una serie di attacchi online. Per esempio difende dalla possibilità che altre persone collegate a una rete wifi spiino il vostro uso del sito o arrivino perfino ad appropriarsi del vostro account. Potete anche fargli notare che i numeri delle carte di credito non sono le uniche informazioni che considerate private o sensibili.<ept id="tjiid362-9">&lt;/p&gt;</ept><bpt id="tjiid362-11">&lt;p&gt;</bpt>Siti come Google, Twitter e Facebook hanno cominciato a supportare HTTPS anche per informazioni non finanziarie, per motivi generali collegati alla privacy e alla sicurezza.<ept id="tjiid362-11">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][9][question" resname="362][field_questions][9][question" approved="yes">
     <source xml:lang="en">Isn't it more expensive or slower for a site to support HTTPS compared to regular HTTP?</source> <target xml:lang="it" state="translated">Ma l'HTTPS non è più costoso o più lento del tradizionale HTTP per un sito?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][9][answer" resname="362][field_questions][9][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-3">&lt;a name="expensive"&gt;</bpt><ept id="tjiid362-3">&lt;/a&gt;</ept><bpt id="tjiid362-5">&lt;p&gt;</bpt>It can be, but some sites have been pleasantly surprised to see how practical it can be. Also, experts at Google are currently implementing several enhancements to the TLS protocol that make HTTPS dramatically faster; if these enhancements are added to the standard soon, the speed gap between the two should almost disappear. See <bpt id="tjiid362-6">&lt;a href="http://www.imperialviolet.org/2010/06/25/overclocking-ssl.html"&gt;</bpt>Adam Langley's description of the HTTPS deployment situation<ept id="tjiid362-6">&lt;/a&gt;</ept> for more details on these issues. Notably, Langley states: "In order to [enable HTTPS by default for Gmail] we had to deploy no additional machines and no special hardware. On our production frontend machines, SSL/TLS accounts for less than 1% of the CPU load, less than 10KB of memory per connection and less than 2% of network overhead."<ept id="tjiid362-5">&lt;/p&gt;</ept><bpt id="tjiid362-9">&lt;p&gt;</bpt>It used to be expensive to purchase a certificate for HTTPS usage, but they can now be obtained for free from <bpt id="tjiid362-10">&lt;a href="http://www.startssl.com/"&gt;</bpt>StartSSL<ept id="tjiid362-10">&lt;/a&gt;</ept> or <bpt id="tjiid362-12">&lt;a href="https://buy.wosign.com/free/"&gt;</bpt>WoSign<ept id="tjiid362-12">&lt;/a&gt;</ept>, and soon free certificate will be available from Let's Encrypt as well.<ept id="tjiid362-9">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-3">&lt;a name="expensive"&gt;</bpt><ept id="tjiid362-3">&lt;/a&gt;</ept><bpt id="tjiid362-5">&lt;p&gt;</bpt>Può esserlo, ma per alcuni siti è stata una sorpresa scoprire quanto possa esse funzionale. Inoltre degli esperti di Google stanno lavorando al miglioramento del protocollo TLS in modo da rendere l'HTTPS molto più veloce; se questi miglioramenti saranno presto aggiunti allo standard, la differenza di velocità tra i due scomparirà quasi del tutto. Vedi <bpt id="tjiid362-6">&lt;a href="http://www.imperialviolet.org/2010/06/25/overclocking-ssl.html"&gt;</bpt>Analisi di Adam Langley sull'utilizzo dell'HTTPS<ept id="tjiid362-6">&lt;/a&gt;</ept> per più informazioni su questo argomento. In particolare, Langley dice: "Per riuscire ad abilitare l'HTTPS di default su Gmail non abbiamo dovuto impiagare hardware aggiuntivo o particolare. L'SSL/TLS sui nostri server front-end incide per meno dell'1% sul carico della CPU, meno di 10KB per connessione e meno del 2% sull'overhead della rete."<ept id="tjiid362-5">&lt;/p&gt;</ept><bpt id="tjiid362-9">&lt;p&gt;</bpt>Inizialmente i certificati per l'utilizzo dell'HTTPS erano costosi ma ora è possibile ottenerne uno gratuito da <bpt id="tjiid362-10">&lt;a href="http://www.startssl.com/"&gt;</bpt>StartSSL<ept id="tjiid362-10">&lt;/a&gt;</ept> o da <bpt id="tjiid362-12">&lt;a href="https://buy.wosign.com/free/"&gt;</bpt>WoSign<ept id="tjiid362-12">&lt;/a&gt;</ept> e presto saranno disponibili certificati gratuiti anche da Let's Encrypt.<ept id="tjiid362-9">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][10][question" resname="362][field_questions][10][question" approved="yes">
     <source xml:lang="en">Why should I use HTTPS Everywhere instead of just typing https:// at the beginning of site names?</source> <target xml:lang="it" state="translated">Perchè dovrei usare HTTPS Everywhere invece di digitare https:// all'inizio dell'indirizzo dei siti?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][10][answer" resname="362][field_questions][10][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="why"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept> Even if you normally type https://, HTTPS Everywhere might protect you if you occasionally forget. Also, it can rewrite other people's links that you follow. For instance, if you click on a link to <bpt id="tjiid362-4">&lt;a href="http://en.wikipedia.org/wiki/EFF_Pioneer_Award"&gt;</bpt>http://en.wikipedia.org/wiki/EFF_Pioneer_Award<ept id="tjiid362-4">&lt;/a&gt;</ept>, HTTPS Everywhere will automatically rewrite the link to <bpt id="tjiid362-6">&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/EFF_Pioneer_Award"&gt;</bpt>https://secure.wikimedia.org/wikipedia/en/wiki/EFF_Pioneer_Award<ept id="tjiid362-6">&lt;/a&gt;</ept>. Thus, you might get some protection even if you wouldn't have noticed that the target site is available in HTTPS.<ept id="tjiid362-1">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="why"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept> Anche se di solito digiti https://, HTTPS Everywhere ti può aiutare nei casi in cui ti dimentichi di farlo. Inoltre può riscrivere i collegamenti che segui. Per esempio se clicchi sul link <bpt id="tjiid362-4">&lt;a href="http://en.wikipedia.org/wiki/EFF_Pioneer_Award"&gt;</bpt>http://en.wikipedia.org/wiki/EFF_Pioneer_Award<ept id="tjiid362-4">&lt;/a&gt;</ept>, HTTPS Everywhere cambierà automaticamente il link in <bpt id="tjiid362-6">&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/EFF_Pioneer_Award"&gt;</bpt>https://secure.wikimedia.org/wikipedia/en/wiki/EFF_Pioneer_Award<ept id="tjiid362-6">&lt;/a&gt;</ept>. Così, Thus, you might get some protection even if you wouldn't have noticed that the target site is available in HTTPS.<ept id="tjiid362-1">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][11][question" resname="362][field_questions][11][question" approved="no">
     <source xml:lang="en">Why does HTTPS Everywhere include rules for sites like PayPal that already require HTTPS on all their pages?</source> <target xml:lang="it" state="needs-review-translation">Perchè HTTPS Everywhere ha delle regole per siti come PayPal che richiedono già l'HTTPS sulle loro pagine?</target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][11][answer" resname="362][field_questions][11][answer" approved="yes">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="sslstrip"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept> HTTPS Everywhere, like the <bpt id="tjiid362-4">&lt;a href="http://www.w3.org/Security/wiki/Strict_Transport_Security"&gt;</bpt>HSTS protocol<ept id="tjiid362-4">&lt;/a&gt;</ept>, tries to address an attack called <bpt id="tjiid362-6">&lt;a href="http://www.thoughtcrime.org/software/sslstrip/"&gt;</bpt>SSL stripping<ept id="tjiid362-6">&lt;/a&gt;</ept>. Users are only protected against the SSL stripping attack if their browsers don't even <bpt id="tjiid362-8">&lt;em&gt;</bpt>try<ept id="tjiid362-8">&lt;/em&gt;</ept> to connect to the HTTP version of the site — even if the site would have redirected them to the HTTPS version. With HTTPS Everywhere, the browser won't even attempt the insecure HTTP connection, even if that's what you ask it to do. (Note that HTTPS Everywhere currently does not include a comprehensive list of such sites, which are mainly financial institutions.)<ept id="tjiid362-1">&lt;/p&gt;</ept></source> <target xml:lang="it" state="translated"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="sslstrip"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept> HTTPS Everywhere, come il <bpt id="tjiid362-4">&lt;a href="http://www.w3.org/Security/wiki/Strict_Transport_Security"&gt;</bpt>protocollo HSTS<ept id="tjiid362-4">&lt;/a&gt;</ept>, cerca di affrontare un attacco noto come <bpt id="tjiid362-6">&lt;a href="http://www.thoughtcrime.org/software/sslstrip/"&gt;</bpt>SSL stripping<ept id="tjiid362-6">&lt;/a&gt;</ept>. Gli utenti sono realmente protetti dallo stripping SSL solo se i loro browser <bpt id="tjiid362-8">&lt;em&gt;</bpt>non tentano<ept id="tjiid362-8">&lt;/em&gt;</ept> in alcun modo di connettersi alla versione HTTP del sito — anche se il sito li avrebbe reindirizzati alla versione HTTPS. Con HTTPS Everywhere il browser non proverà mai ad utilizzare la connessione HTTP anche se gli chiederai di farlo. (Attualmente HTTPS Everywhere non possiede una lista completa di qeusto tipo di siti, che solitamente appartengono a istituzioni finanziarie.)<ept id="tjiid362-1">&lt;/p&gt;</ept></target> <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][12][question" resname="362][field_questions][12][question">
     <source xml:lang="en">What do the different colors for rulesets in the toolbar menu mean?</source> <target xml:lang="it"></target> <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][12][answer" resname="362][field_questions][12][answer">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><ept id="tjiid362-1">&lt;/p&gt;</ept><bpt id="tjiid362-3">&lt;a name="colors"&gt;</bpt><ept id="tjiid362-3">&lt;/a&gt;</ept><bpt id="tjiid362-5">&lt;p&gt;</bpt><![CDATA[The colors are:]]><ept id="tjiid362-5">&lt;/p&gt;</ept><bpt id="tjiid362-7">&lt;p&gt;</bpt><![CDATA[Dark Green: ruleset was active in loading the resources in the current page.]]><ept id="tjiid362-7">&lt;/p&gt;</ept><bpt id="tjiid362-9">&lt;p&gt;</bpt><![CDATA[Light Green: ruleset was ready to prevent HTTP loads in the current page, but everything that the ruleset would have covered was loaded over HTTPS anyway (in the code, light green is called a "moot rule").]]><ept id="tjiid362-9">&lt;/p&gt;</ept><bpt id="tjiid362-11">&lt;p&gt;</bpt><![CDATA[Dark Brown or Clockwise Red Arrow: broken rule -- the ruleset is active but the server is redirecting at least some URLs back from HTTPS to HTTP.]]><ept id="tjiid362-11">&lt;/p&gt;</ept><bpt id="tjiid362-13">&lt;p&gt;</bpt><![CDATA[Gray: the ruleset is disabled.]]><ept id="tjiid362-13">&lt;/p&gt;</ept></source>
     <target xml:lang="it"/>
     <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][13][question" resname="362][field_questions][13][question">
     <source xml:lang="en"><![CDATA[I'm having a problem installing the browser extension.]]></source>
     <target xml:lang="it"/>
     <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][13][answer" resname="362][field_questions][13][answer">
     <source xml:lang="en"><bpt id="tjiid362-1">&lt;p&gt;</bpt><bpt id="tjiid362-2">&lt;a name="problems-installing"&gt;</bpt><ept id="tjiid362-2">&lt;/a&gt;</ept><![CDATA[ Some people report that installing HTTPS Everywhere gives them the error: "The addon could not be downloaded because of a connection failure on www.eff.org." This may be caused by Avast anti-virus, which blocks installation of browser extensions. You may be able to ]]><bpt id="tjiid362-4">&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/https-everywhere/"&gt;</bpt><![CDATA[install from addons.mozilla.org instead]]><ept id="tjiid362-4">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid362-1">&lt;/p&gt;</ept></source>
     <target xml:lang="it"/>
     <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][field_questions][14][question" resname="362][field_questions][14][question">
     <source xml:lang="en"><![CDATA[How do I add my own site to HTTPS Everywhere?]]></source>
     <target xml:lang="it"/>
     <note>Question</note>
    </trans-unit>
    <trans-unit id="362][field_questions][14][answer" resname="362][field_questions][14][answer">
     <source xml:lang="en"><![CDATA[We're excited that you want your site in HTTPS Everywhere! However, remember that not everyone who visits your site has our extension installed. If you run a web site, you can make it default to HTTPS for everyone, not just HTTPS Everywhere users. And it's less work! The steps you should take, in order, are:

]]><bpt id="tjiid362-1">&lt;ol&gt;</bpt><bpt id="tjiid362-2">&lt;li&gt;</bpt><![CDATA[Set up a ]]><bpt id="tjiid362-3">&lt;a href="https://www.sslshopper.com/apache-redirect-http-to-https.html"&gt;</bpt><![CDATA[redirect]]><ept id="tjiid362-3">&lt;/a&gt;</ept><![CDATA[ from HTTP to HTTPS on your site.]]><ept id="tjiid362-2">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid362-6">&lt;li&gt;</bpt><bpt id="tjiid362-7">&lt;a href="https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html"&gt;</bpt><![CDATA[Add the Strict-Transport-Security (HSTS) header on your site]]><ept id="tjiid362-7">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid362-6">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid362-10">&lt;li&gt;</bpt><bpt id="tjiid362-11">&lt;a href="https://hstspreload.appspot.com/"&gt;</bpt><![CDATA[Add your site to the HSTS Preload list]]><ept id="tjiid362-11">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid362-10">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid362-1">&lt;/ol&gt;</ept><![CDATA[

These steps will give your site much better protection that adding it to HTTPS Everywhere. Generally speaking, once you are done, there is no need to add your site to HTTPS Everywhere. However, if you would still like to, please follow the ]]><bpt id="tjiid362-15">&lt;a href="https://eff.org/https-everywhere/rulesets"&gt;</bpt><![CDATA[instructions on writing rulesets]]><ept id="tjiid362-15">&lt;/a&gt;</ept><![CDATA[, and indicate that you are the author of the web site when you submit your pull request.]]></source>
     <target xml:lang="it"/>
     <note>Answer</note>
    </trans-unit>
    <trans-unit id="362][title_field][0][value" resname="362][title_field][0][value">
     <source xml:lang="en"><![CDATA[HTTPS Everywhere FAQ]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="363">
    <note>HTTPS Everywhere</note>
    <trans-unit id="363][body][0][value" resname="363][body][0][value">
     <source xml:lang="en"><bpt id="tjiid363-1">&lt;p&gt;</bpt><![CDATA[HTTPS Everywhere is produced as a collaboration between ]]><bpt id="tjiid363-2">&lt;a href="https://www.torproject.org"&gt;</bpt><![CDATA[The Tor Project]]><ept id="tjiid363-2">&lt;/a&gt;</ept><![CDATA[ and the ]]><bpt id="tjiid363-4">&lt;a href="https://eff.org/"&gt;</bpt><![CDATA[Electronic Frontier Foundation]]><ept id="tjiid363-4">&lt;/a&gt;</ept><![CDATA[. Many sites on the web offer some limited support for encryption over ]]><bpt id="tjiid363-6">&lt;a href="https://en.wikipedia.org/wiki/HTTP_Secure"&gt;</bpt><![CDATA[HTTPS]]><ept id="tjiid363-6">&lt;/a&gt;</ept><![CDATA[, but make it difficult to use. For instance, they may default to unencrypted HTTP, or fill encrypted pages with links that go back to the unencrypted site. The HTTPS Everywhere extension fixes these problems by using ]]><bpt id="tjiid363-8">&lt;a href="https://www.xkcd.com/208"&gt;</bpt><![CDATA[clever technology]]><ept id="tjiid363-8">&lt;/a&gt;</ept><![CDATA[ to rewrite requests to these sites to HTTPS. Information about how to access the project's Git repository and get involved in development is ]]><bpt id="tjiid363-10">&lt;a href="/https-everywhere/development"&gt;</bpt><![CDATA[here]]><ept id="tjiid363-10">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid363-1">&lt;/p&gt;</ept><bpt id="tjiid363-13">&lt;p&gt;</bpt><bpt id="tjiid363-14">&lt;strong&gt;</bpt><![CDATA[Webmasters and prospective contributors:]]><ept id="tjiid363-14">&lt;/strong&gt;</ept><![CDATA[ Check the ]]><bpt id="tjiid363-16">&lt;a href="https://www.eff.org/https-everywhere/atlas"&gt;</bpt><![CDATA[HTTPS Everywhere Atlas]]><ept id="tjiid363-16">&lt;/a&gt;</ept><![CDATA[ to quickly see how existing HTTPS Everywhere rules affect sites you care about! HTTPS Everywhere is governed by EFF's ]]><bpt id="tjiid363-18">&lt;a href="https://www.eff.org/code/privacy"&gt;</bpt><![CDATA[Privacy Policy for Software]]><ept id="tjiid363-18">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid363-13">&lt;/p&gt;</ept><bpt id="tjiid363-21">&lt;p&gt;</bpt><bpt id="tjiid363-22">&lt;a name="problems-installing"&gt;</bpt><ept id="tjiid363-22">&lt;/a&gt;</ept><![CDATA[ ]]><bpt id="tjiid363-24">&lt;strong&gt;</bpt><![CDATA[Problems Installing: ]]><ept id="tjiid363-24">&lt;/strong&gt;</ept><![CDATA[Some people report that installing HTTPS Everywhere gives them the error: "The addon could not be downloaded because of a connection failure on ]]><bpt id="tjiid363-26">&lt;span class="moz-txt-link-abbreviated"&gt;</bpt><![CDATA[www.eff.org]]><ept id="tjiid363-26">&lt;/span&gt;</ept><![CDATA[." ]]><bpt id="tjiid363-28">&lt;a href="https://kittens.eff.org/https-everywhere/faq#problems-installing"&gt;</bpt><![CDATA[See this FAQ entry for help]]><ept id="tjiid363-28">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid363-21">&lt;/p&gt;</ept><bpt id="tjiid363-31">&lt;p&gt;</bpt><bpt id="tjiid363-32">&lt;a href="#" id="https-everywhere-more"&gt;</bpt><![CDATA[Read More About HTTPS Everywhere »]]><ept id="tjiid363-32">&lt;/a&gt;</ept><ept id="tjiid363-31">&lt;/p&gt;</ept><bpt id="tjiid363-35">&lt;div id="https-everywhere-hidden"&gt;</bpt><bpt id="tjiid363-36">&lt;h2&gt;</bpt><![CDATA[Questions and Caveats]]><ept id="tjiid363-36">&lt;/h2&gt;</ept><bpt id="tjiid363-38">&lt;p&gt;</bpt><![CDATA[Sadly, many sites still include a lot of content from third party domains that is not available over HTTPS. As always, if the browser's lock icon ]]><bpt id="tjiid363-39">&lt;a href="https://www.eff.org/https-everywhere/faq#mixed-content"&gt;</bpt><![CDATA[is broken or carries an exclamation mark]]><ept id="tjiid363-39">&lt;/a&gt;</ept><![CDATA[, you may remain vulnerable to some adversaries that use active attacks or traffic analysis. However, the effort that would be required to eavesdrop on your browsing should still be usefully increased. ]]><bpt id="tjiid363-41">&lt;strong&gt;</bpt><![CDATA[Update: in recent versions of Firefox, Mozilla has removed the broken padlock indicator. Now, the only difference between a secure and insecure HTTPS deployment is the blue or green tint on the left of the address bar for secure deployments]]><ept id="tjiid363-41">&lt;/strong&gt;</ept><![CDATA[ Answers to common questions may be on the ]]><bpt id="tjiid363-43">&lt;a href="/https-everywhere/faq/"&gt;</bpt><![CDATA[frequently asked questions]]><ept id="tjiid363-43">&lt;/a&gt;</ept><![CDATA[ page. ]]><bpt id="tjiid363-45">&lt;strong&gt;</bpt><![CDATA[HTTPS Everywhere can protect you only when you're using sites that support HTTPS and for which HTTPS Everywhere include a ]]><bpt id="tjiid363-46">&lt;a href="/https-everywhere/rulesets"&gt;</bpt><![CDATA[ruleset]]><ept id="tjiid363-46">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid363-45">&lt;/strong&gt;</ept><![CDATA[ If sites you use don't support HTTPS, ask the site operators to add it; only the site operator is able to enable HTTPS. There is more information and instruction on how server operators can do that in the EFF article ]]><bpt id="tjiid363-49">&lt;a href="/pages/how-deploy-https-correctly"&gt;</bpt><![CDATA[How to Deploy HTTPS Correctly]]><ept id="tjiid363-49">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid363-38">&lt;/p&gt;</ept><bpt id="tjiid363-52">&lt;h2&gt;</bpt><![CDATA[Development And Writing your own Rulesets]]><ept id="tjiid363-52">&lt;/h2&gt;</ept><bpt id="tjiid363-54">&lt;p&gt;</bpt><bpt id="tjiid363-55">&lt;strong&gt;</bpt><![CDATA[Webmasters and prospective contributors:]]><ept id="tjiid363-55">&lt;/strong&gt;</ept><![CDATA[ Check the ]]><bpt id="tjiid363-57">&lt;a href="https://www.eff.org/https-everywhere/atlas"&gt;</bpt><![CDATA[HTTPS Everywhere Atlas]]><ept id="tjiid363-57">&lt;/a&gt;</ept><![CDATA[ to quickly see how existing HTTPS Everywhere rules affect sites you care about! You can help us test forthcoming site support and new features by installing the ]]><bpt id="tjiid363-59">&lt;a href="/files/https-everywhere-devel.xpi"&gt;</bpt><![CDATA[development branch]]><ept id="tjiid363-59">&lt;/a&gt;</ept><![CDATA[ of the extension. HTTPS Everywhere uses small ruleset files to define which domains are redirected to https, and how. If you'd like to write your own ruleset, you can find out how to do that ]]><bpt id="tjiid363-61">&lt;a href="/https-everywhere/rulesets"&gt;</bpt><![CDATA[here]]><ept id="tjiid363-61">&lt;/a&gt;</ept><![CDATA[. Information about how to access the project's Git repository and get involved in development is ]]><bpt id="tjiid363-63">&lt;a href="/https-everywhere/development"&gt;</bpt><![CDATA[here]]><ept id="tjiid363-63">&lt;/a&gt;</ept><![CDATA[. Send feedback on this project to the ]]><bpt id="tjiid363-65">&lt;tt&gt;</bpt><![CDATA[https-everywhere AT eff.org]]><ept id="tjiid363-65">&lt;/tt&gt;</ept><![CDATA[ mailing list. Note that this is a public and publicly-archived mailing list. You can also ]]><bpt id="tjiid363-67">&lt;a href="https://lists.eff.org/mailman/listinfo/https-everywhere"&gt;</bpt><![CDATA[subscribe]]><ept id="tjiid363-67">&lt;/a&gt;</ept><![CDATA[. Send new rewrite rules or fixes to existing rewrite rules to the ]]><bpt id="tjiid363-69">&lt;tt&gt;</bpt><![CDATA[https-everywhere-rules AT eff.org]]><ept id="tjiid363-69">&lt;/tt&gt;</ept><![CDATA[ mailing list. Note that this is a public and publicly-archived mailing list. You can also ]]><bpt id="tjiid363-71">&lt;a href="https://lists.eff.org/mailman/listinfo/https-everywhere-rules"&gt;</bpt><![CDATA[subscribe]]><ept id="tjiid363-71">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid363-54">&lt;/p&gt;</ept><ept id="tjiid363-35">&lt;/div&gt;</ept></source>
     <target xml:lang="it"/>
     <note>Body</note>
    </trans-unit>
    <trans-unit id="363][title_field][0][value" resname="363][title_field][0][value">
     <source xml:lang="en"><![CDATA[HTTPS Everywhere]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="365">
    <note>How to Deploy HTTPS Correctly</note>
    <trans-unit id="365][body][0][value" resname="365][body][0][value">
     <source xml:lang="en"><bpt id="tjiid365-1">&lt;p class="eff-light-blue eff-grey"&gt;</bpt><![CDATA[By ]]><bpt id="tjiid365-2">&lt;a href="http://noncombatant.org"&gt;</bpt><![CDATA[Chris Palmer]]><ept id="tjiid365-2">&lt;/a&gt;</ept><![CDATA[ and ]]><bpt id="tjiid365-4">&lt;a href="/about/staff/yan-zhu"&gt;</bpt><![CDATA[Yan Zhu]]><ept id="tjiid365-4">&lt;/a&gt;</ept><ept id="tjiid365-1">&lt;/p&gt;</ept><bpt id="tjiid365-7">&lt;p&gt;</bpt><bpt id="tjiid365-8">&lt;em&gt;</bpt><![CDATA[Originally published on 15 Nov 2010. Revised on 12 Dec 2013.]]><ept id="tjiid365-8">&lt;/em&gt;</ept><ept id="tjiid365-7">&lt;/p&gt;</ept><bpt id="tjiid365-11">&lt;p&gt;</bpt><![CDATA[Internet technologists have always known that HTTP is insecure, causing many risks to users. Because HTTP traffic is unencrypted, any data sent over HTTP can be read and modified by anyone who has access to the network. As revealed by the Snowden NSA surveillance documents, HTTP traffic can also be collected and searched by government agencies without notice to users or webmasters. Given these risks, EFF believes that every website should support HTTPS on all pages as soon as possible.]]><ept id="tjiid365-11">&lt;/p&gt;</ept><bpt id="tjiid365-13">&lt;p&gt;</bpt><![CDATA[While HTTPS has long existed as the bare minimum for web security, some websites have been slow to adopt it. In part, this is because correctly and completely serving an application over HTTPS takes some care.]]><ept id="tjiid365-13">&lt;/p&gt;</ept><bpt id="tjiid365-15">&lt;p&gt;</bpt><![CDATA[This article is designed to encourage and assist website operators in implementing and improving HTTPS support. Although no precaution will defend against all threats, supporting HTTPS will protect users from a wide range of common attacks.]]><ept id="tjiid365-15">&lt;/p&gt;</ept><bpt id="tjiid365-17">&lt;h2&gt;</bpt><![CDATA[Background]]><ept id="tjiid365-17">&lt;/h2&gt;</ept><bpt id="tjiid365-19">&lt;p&gt;</bpt><![CDATA[HTTPS provides three security guarantees:]]><ept id="tjiid365-19">&lt;/p&gt;</ept><bpt id="tjiid365-21">&lt;ol&gt;</bpt><bpt id="tjiid365-22">&lt;li&gt;</bpt><bpt id="tjiid365-23">&lt;strong&gt;</bpt><![CDATA[Server authentication]]><ept id="tjiid365-23">&lt;/strong&gt;</ept><![CDATA[ allows users to have some confidence that they are talking to the true application server. Without this guarantee, there can be no guarantee of confidentiality or integrity.]]><ept id="tjiid365-22">&lt;/li&gt;</ept><bpt id="tjiid365-26">&lt;li&gt;</bpt><bpt id="tjiid365-27">&lt;strong&gt;</bpt><![CDATA[Data confidentiality]]><ept id="tjiid365-27">&lt;/strong&gt;</ept><![CDATA[ means that eavesdroppers cannot understand the content of the communications between the user's browser and the web server, because the data is encrypted.]]><ept id="tjiid365-26">&lt;/li&gt;</ept><bpt id="tjiid365-30">&lt;li&gt;</bpt><bpt id="tjiid365-31">&lt;strong&gt;</bpt><![CDATA[Data integrity]]><ept id="tjiid365-31">&lt;/strong&gt;</ept><![CDATA[ means that a network attacker cannot damage or alter the content of the communications between the user's browser and the web server, because they are validated with a cryptographic ]]><bpt id="tjiid365-33">&lt;em&gt;</bpt><bpt id="tjiid365-34">&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Message_authentication_code"&gt;</bpt><![CDATA[message authentication code]]><ept id="tjiid365-34">&lt;/a&gt;</ept><ept id="tjiid365-33">&lt;/em&gt;</ept><![CDATA[.]]><ept id="tjiid365-30">&lt;/li&gt;</ept><ept id="tjiid365-21">&lt;/ol&gt;</ept><bpt id="tjiid365-39">&lt;p&gt;</bpt><bpt id="tjiid365-40">&lt;strong&gt;</bpt><![CDATA[HTTP provides no security guarantees]]><ept id="tjiid365-40">&lt;/strong&gt;</ept><![CDATA[, and applications that use it ]]><bpt id="tjiid365-42">&lt;strong&gt;</bpt><![CDATA[cannot possibly provide users any security]]><ept id="tjiid365-42">&lt;/strong&gt;</ept><![CDATA[. When using a web application hosted via HTTP, people have no way of knowing whether they are talking to the true application server, nor can they be sure attackers have not read or modified communications between the user's computer and the server.]]><ept id="tjiid365-39">&lt;/p&gt;</ept><bpt id="tjiid365-45">&lt;h2&gt;</bpt><![CDATA[Modes of Attack and Defense]]><ept id="tjiid365-45">&lt;/h2&gt;</ept><bpt id="tjiid365-47">&lt;p&gt;</bpt><![CDATA[However users connect to the Internet, there are a variety of people who can attack them--whether spying on them, impersonating them, tampering with their communications, or all three of these. The wifi network operator can do this; any ISP in the path between client and server can do it; anyone who can reconfigure the wifi router or another router can do it; and often, anyone else using the same network can do it, too.]]><ept id="tjiid365-47">&lt;/p&gt;</ept><bpt id="tjiid365-49">&lt;p&gt;</bpt><bpt id="tjiid365-50">&lt;a href="http://codebutler.com/firesheep-a-day-later/"&gt;</bpt><![CDATA[Firesheep]]><ept id="tjiid365-50">&lt;/a&gt;</ept><![CDATA[ is an example of a ]]><bpt id="tjiid365-52">&lt;em&gt;</bpt><![CDATA[passive network attack]]><ept id="tjiid365-52">&lt;/em&gt;</ept><![CDATA[: it eavesdrops on the contents of network communications between browser and server, but does not re-route or modify them. Government surveillance programs such as ]]><bpt id="tjiid365-54">&lt;a href="http://www.theguardian.com/world/2013/jul/31/nsa-top-secret-program-online-data"&gt;</bpt><![CDATA[XKeyscore]]><ept id="tjiid365-54">&lt;/a&gt;</ept><![CDATA[ also use passive attacks on HTTP traffic to collect massive amounts of online communication data.]]><ept id="tjiid365-49">&lt;/p&gt;</ept><bpt id="tjiid365-57">&lt;p&gt;</bpt><![CDATA[By contrast, other freely-available tools perform ]]><bpt id="tjiid365-58">&lt;em&gt;</bpt><![CDATA[active network attacks]]><ept id="tjiid365-58">&lt;/em&gt;</ept><![CDATA[, in which the attacker does modify the contents of and/or re-route communications. These tools range from serious, such as ]]><bpt id="tjiid365-60">&lt;a href="http://www.thoughtcrime.org/software/sslstrip/"&gt;</bpt><![CDATA[sslstrip]]><ept id="tjiid365-60">&lt;/a&gt;</ept><![CDATA[, to silly, like ]]><bpt id="tjiid365-62">&lt;a href="http://www.ex-parrot.com/pete/upside-down-ternet.html"&gt;</bpt><![CDATA[the Upside-Down-Ternet]]><ept id="tjiid365-62">&lt;/a&gt;</ept><![CDATA[. Although Upside-Down-Ternet is a funny prank, it is technically identical to potentially more damaging attacks such as an attack that injects malicious code or incorrect information into web pages; at the same time, it shows that such attacks are easy enough to be jokes. Free wifi hotspots have been known to inject advertisements dynamically into web pages that users read--indicating that active network attacks are a viable business model. Tools like ]]><bpt id="tjiid365-64">&lt;a href="http://www.oxid.it/cain.html"&gt;</bpt><![CDATA[Cain and Abel]]><ept id="tjiid365-64">&lt;/a&gt;</ept><![CDATA[ enable a range of attacks, including re-routing local network traffic through the attacker's system. (Also see ]]><bpt id="tjiid365-66">&lt;a href="http://arpspoof.sourceforge.net/"&gt;</bpt><![CDATA[Arpspoof]]><ept id="tjiid365-66">&lt;/a&gt;</ept><![CDATA[ and ]]><bpt id="tjiid365-68">&lt;a href="http://www.monkey.org/%7Edugsong/dsniff/"&gt;</bpt><![CDATA[dsniff]]><ept id="tjiid365-68">&lt;/a&gt;</ept><![CDATA[.)]]><ept id="tjiid365-57">&lt;/p&gt;</ept><bpt id="tjiid365-71">&lt;p&gt;</bpt><![CDATA[Only a mechanism that provides (at least) authentication, confidentiality, and integrity can defend against a range of attacks. HTTPS is currently our best option for web applications.]]><ept id="tjiid365-71">&lt;/p&gt;</ept><bpt id="tjiid365-73">&lt;p&gt;</bpt><![CDATA[However, there are some potential pitfalls that site operators must avoid in order to deploy HTTPS securely.]]><ept id="tjiid365-73">&lt;/p&gt;</ept><bpt id="tjiid365-75">&lt;h2&gt;</bpt><![CDATA[Mixed Content]]><ept id="tjiid365-75">&lt;/h2&gt;</ept><bpt id="tjiid365-77">&lt;p&gt;</bpt><![CDATA[When hosting an application over HTTPS, there can be no ]]><bpt id="tjiid365-78">&lt;em&gt;</bpt><![CDATA[mixed content]]><ept id="tjiid365-78">&lt;/em&gt;</ept><![CDATA[; that is, all content in the page must be fetched via HTTPS. It is common to see partial HTTPS support on sites, in which the main pages are fetched via HTTPS but some or all of the media elements, stylesheets, and JavaScript in the page are fetched via HTTP.]]><ept id="tjiid365-77">&lt;/p&gt;</ept><bpt id="tjiid365-81">&lt;p&gt;</bpt><![CDATA[This is unsafe because although the main page load is protected against active and passive network attack, none of the other resources are. If a page loads some JavaScript or CSS code via HTTP, an attacker can provide a false, malicious code file and take over the page's DOM once it loads. Then, the user would be back to a situation of having no security. This is why all mainstream browsers warn users about pages that load mixed content. Nor is it safe to reference images via HTTP: What if the attacker swapped the Save Message and Delete Message icons in a webmail app?]]><ept id="tjiid365-81">&lt;/p&gt;</ept><bpt id="tjiid365-83">&lt;p&gt;</bpt><bpt id="tjiid365-84">&lt;strong&gt;</bpt><![CDATA[You must serve the entire application domain over HTTPS.]]><ept id="tjiid365-84">&lt;/strong&gt;</ept><![CDATA[ Redirect HTTP requests with HTTP 301 or 302 responses to the equivalent HTTPS resource.]]><ept id="tjiid365-83">&lt;/p&gt;</ept><bpt id="tjiid365-87">&lt;p&gt;</bpt><![CDATA[Some site operators provide only the login page over HTTPS, on the theory that only the user's password is sensitive. These sites' users are ]]><bpt id="tjiid365-88">&lt;a&gt;</bpt><![CDATA[vulnerable to passive and active attacks]]><ept id="tjiid365-88">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid365-87">&lt;/p&gt;</ept><bpt id="tjiid365-91">&lt;p&gt;</bpt><![CDATA[Unfortunately, many sites today load content from external sites and CDN's that do not support HTTPS. If it's not possible to serve these resources from your own host or another one that supports HTTPS, you should urge these other sites to start supporting HTTPS immediately.]]><ept id="tjiid365-91">&lt;/p&gt;</ept><bpt id="tjiid365-93">&lt;h2&gt;</bpt><![CDATA[Security and Cookies]]><ept id="tjiid365-93">&lt;/h2&gt;</ept><bpt id="tjiid365-95">&lt;p&gt;</bpt><![CDATA[As Chris Palmer described in a ]]><bpt id="tjiid365-96">&lt;a href="https://www.isecpartners.com/media/12009/web-session-management.pdf"&gt;</bpt><![CDATA[paper on secure session management for web applications]]><ept id="tjiid365-96">&lt;/a&gt;</ept><![CDATA[, site operators must scope sensitive cookies (such as cookies used for user authentication) to the secure origin. If a cookie is broadly scoped (with the Domain attribute in the Set-Cookie: header), it may "leak" to other hosts or applications in the same domain--potentially less-secure hosts or applications.]]><ept id="tjiid365-95">&lt;/p&gt;</ept><bpt id="tjiid365-99">&lt;p&gt;</bpt><![CDATA[Similarly, the application must set the Secure attribute on the cookie when setting it. This attribute instructs the browser to send the cookie only over secure (HTTPS) transport, never insecure (HTTP).]]><ept id="tjiid365-99">&lt;/p&gt;</ept><bpt id="tjiid365-101">&lt;h2&gt;</bpt><![CDATA[Use HTTP Strict Transport Security]]><ept id="tjiid365-101">&lt;/h2&gt;</ept><bpt id="tjiid365-103">&lt;p&gt;</bpt><bpt id="tjiid365-104">&lt;a href="https://en.wikipedia.org/wiki/Strict_Transport_Security"&gt;</bpt><![CDATA[HTTP Strict Transport Security]]><ept id="tjiid365-104">&lt;/a&gt;</ept><![CDATA[ (HSTS) is an HTTP protocol extension that enables site operators to instruct browsers to expect the site to use HTTPS.]]><ept id="tjiid365-103">&lt;/p&gt;</ept><bpt id="tjiid365-107">&lt;p&gt;</bpt><![CDATA[Although not all browsers yet support HSTS, EFF urges those that don't--we're looking especially at you, Apple and Microsoft--to follow the lead Google, Opera, and Mozilla have set by adopting this useful security mechanism. Indeed, ultimately we expect HTTPS (and possibly newer protocols such as ]]><bpt id="tjiid365-108">&lt;a href="https://en.wikipedia.org/wiki/SPDY"&gt;</bpt><![CDATA[SPDY]]><ept id="tjiid365-108">&lt;/a&gt;</ept><![CDATA[ and ]]><bpt id="tjiid365-110">&lt;a href="https://en.wikipedia.org/wiki/QUIC"&gt;</bpt><![CDATA[QUIC]]><ept id="tjiid365-110">&lt;/a&gt;</ept><![CDATA[) to replace HTTP entirely, the way SSH replaced Telnet and rsh.]]><ept id="tjiid365-107">&lt;/p&gt;</ept><bpt id="tjiid365-113">&lt;p&gt;</bpt><![CDATA[As an extra precaution, your site should support HSTS preloading, which prevents interception of an HTTP request if the browser hasn't yet received a valid HSTS header from the server. HSTS preloading is implemented via an opt-in list of domains that is included in Chromium, Google Chrome, and Firefox. See ]]><bpt id="tjiid365-114">&lt;a href="http://www.chromium.org/sts"&gt;</bpt><![CDATA[Chromium's page]]><ept id="tjiid365-114">&lt;/a&gt;</ept><![CDATA[ for instructions on getting your site added to this list. Note that you must also send an HSTS header with a max-age greater value than 18 weeks for Firefox to include your site in their HSTS preload list.]]><ept id="tjiid365-113">&lt;/p&gt;</ept><bpt id="tjiid365-117">&lt;p&gt;</bpt><![CDATA[We recently enabled HSTS and HSTS preloading for eff.org. It took less than an hour to set up, and we found a way to do it without forcibly redirecting users to HTTPS, so we can state an unequivocal preference for HTTPS access while still making the site available in HTTP. It worked like a charm and a significant fraction of our users are now automatically accessing our site in HTTPS, perhaps without even knowing it.]]><ept id="tjiid365-117">&lt;/p&gt;</ept><bpt id="tjiid365-119">&lt;h2&gt;</bpt><![CDATA[Choose Strong Protocols and Cipher Suites]]><ept id="tjiid365-119">&lt;/h2&gt;</ept><bpt id="tjiid365-121">&lt;p&gt;</bpt><![CDATA[Here is a brief list of recommendations for choosing secure protocols and cipher suites in an SSL deployment:]]><ept id="tjiid365-121">&lt;/p&gt;</ept><bpt id="tjiid365-123">&lt;ul&gt;</bpt><bpt id="tjiid365-124">&lt;li&gt;</bpt><![CDATA[Disable support for SSLv2, SSLv3, and TLS 1.0.]]><ept id="tjiid365-124">&lt;/li&gt;</ept><bpt id="tjiid365-126">&lt;li&gt;</bpt><![CDATA[Support TLS 1.1 and 1.2.]]><ept id="tjiid365-126">&lt;/li&gt;</ept><bpt id="tjiid365-128">&lt;li&gt;</bpt><![CDATA[Disable NULL, aNULL, and eNULL ciphersuites, which do not offer both encryption and authentication.]]><ept id="tjiid365-128">&lt;/li&gt;</ept><bpt id="tjiid365-130">&lt;li&gt;</bpt><![CDATA[Use private keys that are at least as secure as a 2048-bit RSA key.]]><ept id="tjiid365-130">&lt;/li&gt;</ept><bpt id="tjiid365-132">&lt;li&gt;</bpt><![CDATA[Prefer ciphersuites that include ]]><bpt id="tjiid365-133">&lt;b&gt;</bpt><![CDATA[ephemeral Diffie-Hellman key exchange]]><ept id="tjiid365-133">&lt;/b&gt;</ept><![CDATA[. These offer the important property of ]]><bpt id="tjiid365-135">&lt;a href="https://www.eff.org/deeplinks/2013/08/pushing-perfect-forward-secrecy-important-web-privacy-protection"&gt;</bpt><![CDATA[Perfect Forward Secrecy]]><ept id="tjiid365-135">&lt;/a&gt;</ept><![CDATA[, which prevents decryption of past web traffic if your SSL private key is compromised in the future.]]><ept id="tjiid365-132">&lt;/li&gt;</ept><bpt id="tjiid365-138">&lt;li&gt;</bpt><![CDATA[Disable ciphersuites with keys sizes smaller than 128 bits for encryption.]]><ept id="tjiid365-138">&lt;/li&gt;</ept><bpt id="tjiid365-140">&lt;li&gt;</bpt><![CDATA[Disable ciphersuites that use MD5 for hashing. SHA-1 is also discouraged but may be required for compatibility with TLS 1.0 and SSLv3.]]><ept id="tjiid365-140">&lt;/li&gt;</ept><bpt id="tjiid365-142">&lt;li&gt;</bpt><![CDATA[Disable ciphersuites that use RC4 for encryption. AES-CBC is preferable to RC4 but vulnerable to the ]]><bpt id="tjiid365-143">&lt;a href="https://www.imperialviolet.org/2011/09/23/chromeandbeast.html"&gt;</bpt><![CDATA[BEAST]]><ept id="tjiid365-143">&lt;/a&gt;</ept><![CDATA[ attack. Thus, AES-GCM is often recommended.]]><ept id="tjiid365-142">&lt;/li&gt;</ept><bpt id="tjiid365-146">&lt;li&gt;</bpt><![CDATA[Disable TLS compression in order to prevent the ]]><bpt id="tjiid365-147">&lt;a href="https://en.wikipedia.org/wiki/CRIME_%28security_exploit%29"&gt;</bpt><![CDATA[CRIME attack]]><ept id="tjiid365-147">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid365-146">&lt;/li&gt;</ept><bpt id="tjiid365-150">&lt;li&gt;</bpt><![CDATA[Only support secure TLS renegotiations compliant with ]]><bpt id="tjiid365-151">&lt;a href="http://www.ietf.org/rfc/rfc5746.txt"&gt;</bpt><![CDATA[RFC 5746]]><ept id="tjiid365-151">&lt;/a&gt;</ept><![CDATA[, or disable TLS renegotiations entirely.]]><ept id="tjiid365-150">&lt;/li&gt;</ept><ept id="tjiid365-123">&lt;/ul&gt;</ept><bpt id="tjiid365-155">&lt;p&gt;</bpt><![CDATA[A useful tool for testing for well-known weaknesses in an existing HTTPS deployment is Qualys's ]]><bpt id="tjiid365-156">&lt;a href="https://www.ssllabs.com/ssltest/"&gt;</bpt><![CDATA[SSL Server Test]]><ept id="tjiid365-156">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid365-155">&lt;/p&gt;</ept><bpt id="tjiid365-159">&lt;h2&gt;</bpt><![CDATA[Performance Concerns]]><ept id="tjiid365-159">&lt;/h2&gt;</ept><bpt id="tjiid365-161">&lt;p&gt;</bpt><![CDATA[Many site operators report that they can't move to HTTPS for performance reasons. However, most people who say this have not actually measured any performance loss, may not have measured performance at all, and have not profiled and optimized their site's behavior. Usually, sites have latency far higher and/or throughput far lower than necessary even when hosting over HTTP--indicating HTTPS is not the problem.]]><ept id="tjiid365-161">&lt;/p&gt;</ept><bpt id="tjiid365-163">&lt;p&gt;</bpt><![CDATA[The crux of the performance problem is usually at the content layer, and also often at the database layer. Web applications are fundamentally I/O-bound, after all. Consider ]]><bpt id="tjiid365-164">&lt;a href="http://gmailblog.blogspot.com/2008/05/need-for-speed-path-to-faster-loading.html"&gt;</bpt><![CDATA[this wisdom from the Gmail developers]]><ept id="tjiid365-164">&lt;/a&gt;</ept><![CDATA[:]]><ept id="tjiid365-163">&lt;/p&gt;</ept><bpt id="tjiid365-167">&lt;blockquote&gt;</bpt><bpt id="tjiid365-168">&lt;p&gt;</bpt><![CDATA[First, we listed every transaction between the web browser and Google's servers, starting with the moment the "Sign in" button is pressed. To do this, we used a lot of different web development tools, like ]]><bpt id="tjiid365-169">&lt;a href="http://httpwatch.com/"&gt;</bpt><![CDATA[Httpwatch]]><ept id="tjiid365-169">&lt;/a&gt;</ept><![CDATA[, ]]><bpt id="tjiid365-171">&lt;a href="http://www.wireshark.org/"&gt;</bpt><![CDATA[WireShark]]><ept id="tjiid365-171">&lt;/a&gt;</ept><![CDATA[, and ]]><bpt id="tjiid365-173">&lt;a href="http://www.fiddlertool.com/fiddler/"&gt;</bpt><![CDATA[Fiddler]]><ept id="tjiid365-173">&lt;/a&gt;</ept><![CDATA[, plus our own performance measuring systems. [...]]]><ept id="tjiid365-168">&lt;/p&gt;</ept><bpt id="tjiid365-176">&lt;p&gt;</bpt><![CDATA[We spent hours poring over these traces to see exactly what was happening between the browser and Gmail during the sign-in sequence, and we found that there were between fourteen and twenty-four HTTP requests required to load an inbox and display it. To put these numbers in perspective, a popular network news site's home page required about a 180 requests to fully load when I checked it yesterday. But when we examined our requests, we realized that we could do better. We decided to attack the problem from several directions at once: reduce the number of overall requests, make more of the requests cacheable by the browser, and reduce the overhead of each request.]]><ept id="tjiid365-176">&lt;/p&gt;</ept><bpt id="tjiid365-178">&lt;p&gt;</bpt><![CDATA[We made good progress on every front. We reduced the weight of each request itself by eliminating or narrowing the scope of some of our cookies. We made sure that all our images were cacheable by the browser, and we consolidated small icon images into single meta-images, a technique known as spriting. We combined several requests into a single combined request and response. The result is that it now takes as few as four requests from the click of the "Sign in" button to the display of your inbox.]]><ept id="tjiid365-178">&lt;/p&gt;</ept><ept id="tjiid365-167">&lt;/blockquote&gt;</ept><bpt id="tjiid365-181">&lt;p&gt;</bpt><![CDATA[Google's ]]><bpt id="tjiid365-182">&lt;a href="http://www.imperialviolet.org/2010/06/25/overclocking-ssl.html"&gt;</bpt><![CDATA[Adam Langley provides additional detail]]><ept id="tjiid365-182">&lt;/a&gt;</ept><![CDATA[:]]><ept id="tjiid365-181">&lt;/p&gt;</ept><bpt id="tjiid365-185">&lt;blockquote&gt;</bpt><![CDATA[In order to do this we had to deploy ]]><bpt id="tjiid365-186">&lt;em&gt;</bpt><![CDATA[no additional machines]]><ept id="tjiid365-186">&lt;/em&gt;</ept><![CDATA[ and ]]><bpt id="tjiid365-188">&lt;em&gt;</bpt><![CDATA[no special hardware]]><ept id="tjiid365-188">&lt;/em&gt;</ept><![CDATA[. On our production frontend machines, SSL/TLS accounts for less than 1% of the CPU load, less than 10KB of memory per connection and less than 2% of network overhead. Many people believe that SSL takes a lot of CPU time and we hope the above numbers (public for the first time) will help to dispel that. [emphasis in original]]]><ept id="tjiid365-185">&lt;/blockquote&gt;</ept><bpt id="tjiid365-191">&lt;p&gt;</bpt><![CDATA[Is it any wonder Gmail performs well, even when using HTTPS exclusively? Site operators can realize incremental improvement by gradually tuning their web applications. Chris gave a presentation to this effect at ]]><bpt id="tjiid365-192">&lt;a href="http://assets.en.oreilly.com/1/event/22/High%20Performance,%20Low%20Cost,%20and%20Strong%20Security_%20Pick%20Any%20Three%20Presentation.pdf"&gt;</bpt><![CDATA[Web 2.0 Expo 2009]]><ept id="tjiid365-192">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid365-191">&lt;/p&gt;</ept><bpt id="tjiid365-195">&lt;h2&gt;</bpt><![CDATA[Conclusion]]><ept id="tjiid365-195">&lt;/h2&gt;</ept><bpt id="tjiid365-197">&lt;p&gt;</bpt><![CDATA[HTTPS provides the baseline of safety for web application users, and there is no performance- or cost-based reason to stick with HTTP. Web application providers ]]><bpt id="tjiid365-198">&lt;a href="http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1421553"&gt;</bpt><![CDATA[undermine their business models]]><ept id="tjiid365-198">&lt;/a&gt;</ept><![CDATA[ when, by continuing to use HTTP, they enable a wide range of attackers anywhere on the internet to compromise users' information.]]><ept id="tjiid365-197">&lt;/p&gt;</ept></source>
     <target xml:lang="it"/>
     <note>Body</note>
    </trans-unit>
    <trans-unit id="365][title_field][0][value" resname="365][title_field][0][value">
     <source xml:lang="en"><![CDATA[How to Deploy HTTPS Correctly]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="366">
    <note>Secure Messaging Scorecard</note>
    <trans-unit id="366][body][0][value" resname="366][body][0][value">
     <source xml:lang="en"><bpt id="tjiid366-1">&lt;a name="about"&gt;</bpt><ept id="tjiid366-1">&lt;/a&gt;</ept><![CDATA[
]]><bpt id="tjiid366-3">&lt;div class="section"&gt;</bpt><![CDATA[

]]><bpt id="tjiid366-4">&lt;h2&gt;</bpt><![CDATA[About]]><ept id="tjiid366-4">&lt;/h2&gt;</ept><![CDATA[

For years, privacy and security experts worldwide have called on the general public to adopt strong, open-source cryptography to protect our communications. The Snowden revelations have confirmed our worst fears: governments are spying on our digital lives, grabbing up communications transmitted in the clear.

Given widespread government surveillance, why don’t people routinely use tools to encrypt their communications? Wouldn’t we all communicate a little more freely without the shadow of surveillance?

It boils down to two things: security and usability. Most of the tools that are easy for the general public to use don’t rely on security best practices--including end-to-end encryption and open source code. Messaging tools that are really secure often aren’t easy to use; everyday users may have trouble installing the technology, verifying its authenticity, setting up an account, or may accidentally use it in ways that expose their communications.

EFF, in collaboration with Julia Angwin at ProPublica and Joseph Bonneau at the Princeton Center for Information Technology Policy, are joining forces to launch a campaign for secure and usable crypto. We are championing technologies that are strongly secure and also simple to use.

The Secure Messaging Scorecard examines dozens of messaging technologies and rates each of them on a range of security best practices. Our campaign is focused on communication technologies -- including chat clients, text messaging apps, email applications, and video calling technologies. These are the tools everyday users need to communicate with friends, family members, and colleagues, and we need secure solutions for them.

We chose technologies that have a large user base--and thus a great deal of sensitive user communications--in addition to smaller companies that are pioneering advanced security practices. We’re hoping our scorecard will serve as a race-to-the-top, spurring innovation around strong crypto for digital communications.

]]><ept id="tjiid366-3">&lt;/div&gt;</ept><![CDATA[
]]><bpt id="tjiid366-7">&lt;a name="methodology"&gt;</bpt><ept id="tjiid366-7">&lt;/a&gt;</ept><![CDATA[
]]><bpt id="tjiid366-9">&lt;div class="section"&gt;</bpt><![CDATA[

]]><bpt id="tjiid366-10">&lt;h2&gt;</bpt><![CDATA[Methodology]]><ept id="tjiid366-10">&lt;/h2&gt;</ept><![CDATA[

]]><bpt id="tjiid366-12">&lt;p dir="ltr"&gt;</bpt><![CDATA[Here are the criteria we looked at in assessing the security of various communication tools.]]><ept id="tjiid366-12">&lt;/p&gt;</ept><![CDATA[


]]><bpt id="tjiid366-14">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-15">&lt;a name="encrypted"&gt;</bpt><ept id="tjiid366-15">&lt;/a&gt;</ept><bpt id="tjiid366-17">&lt;strong&gt;</bpt><![CDATA[1. Is your communication encrypted in transit?]]><ept id="tjiid366-17">&lt;/strong&gt;</ept><![CDATA[
This criterion requires that all user communications are encrypted along all the links in the communication path. Note that we are not requiring encryption of data that is transmitted on a company network, though that is ideal. We do not require that metadata (such as user names or addresses) is encrypted.]]><ept id="tjiid366-14">&lt;/p&gt;</ept><![CDATA[

]]><bpt id="tjiid366-20">&lt;a name="encrypted"&gt;</bpt><ept id="tjiid366-20">&lt;/a&gt;</ept><![CDATA[

]]><bpt id="tjiid366-22">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-23">&lt;a name="encrypted"&gt;</bpt><ept id="tjiid366-23">&lt;/a&gt;</ept><bpt id="tjiid366-25">&lt;a name="e2e"&gt;</bpt><ept id="tjiid366-25">&lt;/a&gt;</ept><bpt id="tjiid366-27">&lt;strong&gt;</bpt><![CDATA[2.]]><ept id="tjiid366-27">&lt;/strong&gt;</ept><![CDATA[ ]]><bpt id="tjiid366-29">&lt;strong&gt;</bpt><![CDATA[Is your communication encrypted with a key the provider doesn't have access to?]]><ept id="tjiid366-29">&lt;/strong&gt;</ept><![CDATA[
This criterion requires that all user communications are end-to-end encrypted. This means the keys necessary to decrypt messages must be generated and stored at the endpoints (i.e. by users, not by servers). The keys should never leave endpoints except with explicit user action, such as to backup a key or synchronize keys between two devices. It is fine if users' public keys are exchanged using a centralized server.]]><ept id="tjiid366-22">&lt;/p&gt;</ept><![CDATA[

]]><bpt id="tjiid366-32">&lt;a name="e2e"&gt;</bpt><ept id="tjiid366-32">&lt;/a&gt;</ept><![CDATA[

]]><bpt id="tjiid366-34">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-35">&lt;a name="e2e"&gt;</bpt><ept id="tjiid366-35">&lt;/a&gt;</ept><bpt id="tjiid366-37">&lt;a name="verify"&gt;</bpt><ept id="tjiid366-37">&lt;/a&gt;</ept><bpt id="tjiid366-39">&lt;strong&gt;</bpt><![CDATA[3.]]><ept id="tjiid366-39">&lt;/strong&gt;</ept><![CDATA[ ]]><bpt id="tjiid366-41">&lt;strong&gt;</bpt><![CDATA[Can you independently verify your correspondent's identity?]]><ept id="tjiid366-41">&lt;/strong&gt;</ept><x id="tjiid366-43" ctype="lb"/><![CDATA[This criterion requires that a built-in method exists for users to verify the identity of correspondents they are speaking with and the integrity of the channel, even if the service provider or other third parties are compromised. Two acceptable solutions are:]]><ept id="tjiid366-34">&lt;/p&gt;</ept><![CDATA[



]]><bpt id="tjiid366-45">&lt;ul&gt;</bpt><bpt id="tjiid366-46">&lt;li dir="ltr"&gt;</bpt><![CDATA[

]]><bpt id="tjiid366-47">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-48">&lt;a name="verify"&gt;</bpt><ept id="tjiid366-48">&lt;/a&gt;</ept><![CDATA[An interface for users to view the fingerprint (hash) of their correspondent's public keys as well as their own, which users can verify manually or out-of-band.]]><ept id="tjiid366-47">&lt;/p&gt;</ept><![CDATA[

]]><ept id="tjiid366-46">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-52">&lt;li dir="ltr"&gt;</bpt><![CDATA[

]]><bpt id="tjiid366-53">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-54">&lt;a name="verify"&gt;</bpt><ept id="tjiid366-54">&lt;/a&gt;</ept><![CDATA[A key exchange protocol with a short-authentication-string comparison, such as the ]]><bpt id="tjiid366-56">&lt;a href="http://en.wikipedia.org/wiki/Socialist_millionaire" style="line-height: 1.538em;"&gt;</bpt><![CDATA[Socialist Millionaire's protocol]]><ept id="tjiid366-56">&lt;/a&gt;</ept><![CDATA[.]]><ept id="tjiid366-53">&lt;/p&gt;</ept><![CDATA[

]]><ept id="tjiid366-52">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-45">&lt;/ul&gt;</ept><bpt id="tjiid366-61">&lt;p dir="ltr"&gt;</bpt><![CDATA[Other solutions are possible, but any solution must verify a binding between users and the cryptographic channel which has been set up. For the scorecard, we are simply requiring that a mechanism is implemented and not evaluating the usability and security of that mechanism.]]><ept id="tjiid366-61">&lt;/p&gt;</ept><![CDATA[


]]><bpt id="tjiid366-63">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-64">&lt;a name="pfs"&gt;</bpt><ept id="tjiid366-64">&lt;/a&gt;</ept><bpt id="tjiid366-66">&lt;strong&gt;</bpt><![CDATA[4.]]><ept id="tjiid366-66">&lt;/strong&gt;</ept><![CDATA[ ]]><bpt id="tjiid366-68">&lt;strong&gt;</bpt><![CDATA[Are past communications secure if your keys are stolen?]]><ept id="tjiid366-68">&lt;/strong&gt;</ept><![CDATA[

This criterion requires that the app provide ]]><bpt id="tjiid366-70">&lt;a href="https://www.eff.org/deeplinks/2013/08/pushing-perfect-forward-secrecy-important-web-privacy-protection"&gt;</bpt><![CDATA[forward secrecy]]><ept id="tjiid366-70">&lt;/a&gt;</ept><![CDATA[, that is, all communications must be encrypted with ephemeral keys which are routinely deleted (along with the random values used to derive them). It is imperative that these keys cannot be reconstructed after the fact by anybody even given access to both parties' long-term private keys, ensuring that if users choose to delete their local copies of correspondence, they are permanently deleted. Note that this criterion requires criterion 2, end-to-end encryption.]]><ept id="tjiid366-63">&lt;/p&gt;</ept><![CDATA[

]]><bpt id="tjiid366-73">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-74">&lt;em style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[Note: For this phase of the campaign, we accept a hybrid forward-secrecy approach with forward secrecy on the transport layer (for example through TLS with a Diffie-Hellman cipher suite) and non-forward-secret end-to-end encryption, plus an explicit guarantee that ciphertexts are not logged by the provider. This is a compromise as it requires trusting the provider not to log ciphertexts, but we prefer this setup to having no forward secrecy at all.]]><ept id="tjiid366-74">&lt;/em&gt;</ept><ept id="tjiid366-73">&lt;/p&gt;</ept><![CDATA[


]]><bpt id="tjiid366-77">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-78">&lt;a name="open"&gt;</bpt><ept id="tjiid366-78">&lt;/a&gt;</ept><bpt id="tjiid366-80">&lt;strong&gt;</bpt><![CDATA[5.]]><ept id="tjiid366-80">&lt;/strong&gt;</ept><![CDATA[ ]]><bpt id="tjiid366-82">&lt;strong&gt;</bpt><![CDATA[Is the code open to independent review?]]><ept id="tjiid366-82">&lt;/strong&gt;</ept><![CDATA[

This criterion requires that sufficient source-code has been published that a compatible implementation can be independently compiled. Although it is preferable, we do not require the code to be released under any specific free/open source license. We only require that all code which could affect the communication and encryption performed by the client is available for review in order to detect bugs, back doors, and structural problems.]]><ept id="tjiid366-77">&lt;/p&gt;</ept><![CDATA[

]]><bpt id="tjiid366-85">&lt;a name="open"&gt;</bpt><ept id="tjiid366-85">&lt;/a&gt;</ept><bpt id="tjiid366-87">&lt;em&gt;</bpt><![CDATA[Note: when tools are provided by an operating system vendor, we only require code for the tool and not the entire OS. This is a compromise, but the task of securing OSes and updates to OSes is beyond the scope of this project.]]><ept id="tjiid366-87">&lt;/em&gt;</ept><![CDATA[

]]><bpt id="tjiid366-89">&lt;a name="open"&gt;</bpt><ept id="tjiid366-89">&lt;/a&gt;</ept><![CDATA[

]]><bpt id="tjiid366-91">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-92">&lt;a name="open"&gt;</bpt><ept id="tjiid366-92">&lt;/a&gt;</ept><bpt id="tjiid366-94">&lt;a name="documented"&gt;</bpt><ept id="tjiid366-94">&lt;/a&gt;</ept><bpt id="tjiid366-96">&lt;strong&gt;</bpt><![CDATA[6. Is the crypto design well-documented?]]><ept id="tjiid366-96">&lt;/strong&gt;</ept><![CDATA[

This criterion requires clear and detailed explanations of the cryptography used by the application. Preferably this should take the form of a white-paper written for review by an audience of professional cryptographers. This must provide answers to the following questions:]]><ept id="tjiid366-91">&lt;/p&gt;</ept><![CDATA[



]]><bpt id="tjiid366-99">&lt;ul&gt;</bpt><bpt id="tjiid366-100">&lt;li dir="ltr"&gt;</bpt><![CDATA[

]]><bpt id="tjiid366-101">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-102">&lt;a name="documented"&gt;</bpt><ept id="tjiid366-102">&lt;/a&gt;</ept><![CDATA[Which algorithms and parameters (such as key sizes or elliptic curve groups) are used in every step of the encryption and authentication process]]><ept id="tjiid366-101">&lt;/p&gt;</ept><![CDATA[

]]><ept id="tjiid366-100">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-99">&lt;/ul&gt;</ept><bpt id="tjiid366-107">&lt;ul&gt;</bpt><bpt id="tjiid366-108">&lt;li dir="ltr"&gt;</bpt><![CDATA[

]]><bpt id="tjiid366-109">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-110">&lt;a name="documented"&gt;</bpt><ept id="tjiid366-110">&lt;/a&gt;</ept><![CDATA[How keys are generated, stored, and exchanged between users]]><ept id="tjiid366-109">&lt;/p&gt;</ept><![CDATA[

]]><ept id="tjiid366-108">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-107">&lt;/ul&gt;</ept><bpt id="tjiid366-115">&lt;ul&gt;</bpt><bpt id="tjiid366-116">&lt;li dir="ltr"&gt;</bpt><![CDATA[

]]><bpt id="tjiid366-117">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-118">&lt;a name="documented"&gt;</bpt><ept id="tjiid366-118">&lt;/a&gt;</ept><![CDATA[The life-cycle of keys and the process for users to change or revoke their key]]><ept id="tjiid366-117">&lt;/p&gt;</ept><![CDATA[

]]><ept id="tjiid366-116">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-122">&lt;li dir="ltr"&gt;</bpt><![CDATA[

]]><bpt id="tjiid366-123">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-124">&lt;a name="documented"&gt;</bpt><ept id="tjiid366-124">&lt;/a&gt;</ept><![CDATA[A clear statement of the properties and protections the software aims to provide (implicitly, this tends to also provide a threat model, though it's good to have an explicit threat model too). This should also include a clear statement of scenarios in which the protocol is not secure. ]]><ept id="tjiid366-123">&lt;/p&gt;</ept><![CDATA[

]]><ept id="tjiid366-122">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-115">&lt;/ul&gt;</ept><bpt id="tjiid366-129">&lt;a name="documented"&gt;</bpt><ept id="tjiid366-129">&lt;/a&gt;</ept><![CDATA[

]]><bpt id="tjiid366-131">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-132">&lt;a name="documented"&gt;</bpt><ept id="tjiid366-132">&lt;/a&gt;</ept><bpt id="tjiid366-134">&lt;a name="audited"&gt;</bpt><ept id="tjiid366-134">&lt;/a&gt;</ept><bpt id="tjiid366-136">&lt;strong&gt;</bpt><![CDATA[7.]]><ept id="tjiid366-136">&lt;/strong&gt;</ept><![CDATA[ ]]><bpt id="tjiid366-138">&lt;strong&gt;</bpt><![CDATA[Has there been an independent security audit?]]><ept id="tjiid366-138">&lt;/strong&gt;</ept><ept id="tjiid366-131">&lt;/p&gt;</ept><![CDATA[

]]><bpt id="tjiid366-141">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid366-142">&lt;a name="audited"&gt;</bpt><ept id="tjiid366-142">&lt;/a&gt;</ept><![CDATA[This criterion requires an independent security review has been performed within the 12 months prior to evaluation. This review must cover both the design and the implementation of the app and must be performed by a named auditing party that is independent of the tool's main development team. Audits by an independent security team within a large organization are sufficient. Recognizing that unpublished audits can be valuable, we do not require that the results of the audit have been made public, only that a named party is willing to verify that the audit took place.]]><ept id="tjiid366-141">&lt;/p&gt;</ept><![CDATA[

]]><bpt id="tjiid366-145">&lt;p dir="ltr"&gt;</bpt><![CDATA[We've discussed this criterion in depth in a Deeplinks post: ]]><bpt id="tjiid366-146">&lt;a href="https://www.eff.org/deeplinks/2014/11/what-makes-good-security-audit"&gt;</bpt><![CDATA[What Makes a Good Security Audit?]]><ept id="tjiid366-146">&lt;/a&gt;</ept><x id="tjiid366-148" ctype="lb"/><![CDATA[ ]]><ept id="tjiid366-145">&lt;/p&gt;</ept><![CDATA[


]]><ept id="tjiid366-9">&lt;/div&gt;</ept><![CDATA[
]]><bpt id="tjiid366-151">&lt;a name="about"&gt;</bpt><ept id="tjiid366-151">&lt;/a&gt;</ept><![CDATA[
]]><bpt id="tjiid366-153">&lt;div class="section"&gt;</bpt><bpt id="tjiid366-154">&lt;a name="changelog"&gt;</bpt><ept id="tjiid366-154">&lt;/a&gt;</ept><![CDATA[

]]><bpt id="tjiid366-156">&lt;h2&gt;</bpt><![CDATA[Changelog]]><ept id="tjiid366-156">&lt;/h2&gt;</ept><![CDATA[

Entries in the ]]><bpt id="tjiid366-158">&lt;a href="#"&gt;</bpt><![CDATA[Secure Messaging Scorecard]]><ept id="tjiid366-158">&lt;/a&gt;</ept><![CDATA[ were checked with the listed projects and companies when the Scorecard launched on 2014-11-06. Updates will be made if the listees or others inform us of changes or inaccuracies. A log of all such changes is below:

]]><bpt id="tjiid366-160">&lt;ul style="font-size: 13.0080003738403px; line-height: 20.0063037872314px;"&gt;</bpt><bpt id="tjiid366-161">&lt;li&gt;</bpt><bpt id="tjiid366-162">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[2015-06-12]]><ept id="tjiid366-162">&lt;/strong&gt;</ept><bpt id="tjiid366-164">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[ :]]><ept id="tjiid366-164">&lt;/span&gt;</ept><![CDATA[

]]><bpt id="tjiid366-166">&lt;ul&gt;</bpt><bpt id="tjiid366-167">&lt;li&gt;</bpt><![CDATA[We removed Secret as the service was ]]><bpt id="tjiid366-168">&lt;a href="https://medium.com/secret-den/sunset-bc18450478d5" title="Secret sunset"&gt;</bpt><![CDATA[shut down]]><ept id="tjiid366-168">&lt;/a&gt;</ept><![CDATA[ in May 2015.]]><ept id="tjiid366-167">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-166">&lt;/ul&gt;</ept><ept id="tjiid366-161">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-173">&lt;li&gt;</bpt><bpt id="tjiid366-174">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[2015-03-06]]><ept id="tjiid366-174">&lt;/strong&gt;</ept><bpt id="tjiid366-176">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[ :]]><ept id="tjiid366-176">&lt;/span&gt;</ept><![CDATA[

]]><bpt id="tjiid366-178">&lt;ul&gt;</bpt><bpt id="tjiid366-179">&lt;li&gt;</bpt><![CDATA[We credited QQ for completing an independent internal security audit (]]><bpt id="tjiid366-180">&lt;span style="color: #008000;"&gt;</bpt><![CDATA[✓]]><ept id="tjiid366-180">&lt;/span&gt;</ept><![CDATA[)]]><bpt id="tjiid366-182">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[.]]><ept id="tjiid366-182">&lt;/span&gt;</ept><ept id="tjiid366-179">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-178">&lt;/ul&gt;</ept><ept id="tjiid366-173">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-187">&lt;li&gt;</bpt><bpt id="tjiid366-188">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[2015-02-17]]><ept id="tjiid366-188">&lt;/strong&gt;</ept><bpt id="tjiid366-190">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[ :]]><ept id="tjiid366-190">&lt;/span&gt;</ept><![CDATA[

]]><bpt id="tjiid366-192">&lt;ul&gt;</bpt><bpt id="tjiid366-193">&lt;li&gt;</bpt><![CDATA[We credited Telegram (both secret and regular mode) for undergoing a code audit in February 2015 ]]><bpt id="tjiid366-194">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[(]]><ept id="tjiid366-194">&lt;/span&gt;</ept><bpt id="tjiid366-196">&lt;span style="line-height: 20.0063037872314px; color: #008000;"&gt;</bpt><![CDATA[✓]]><ept id="tjiid366-196">&lt;/span&gt;</ept><bpt id="tjiid366-198">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[).]]><ept id="tjiid366-198">&lt;/span&gt;</ept><ept id="tjiid366-193">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-192">&lt;/ul&gt;</ept><ept id="tjiid366-187">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-203">&lt;li&gt;</bpt><bpt id="tjiid366-204">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[2015-01-29]]><ept id="tjiid366-204">&lt;/strong&gt;</ept><bpt id="tjiid366-206">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[ :]]><ept id="tjiid366-206">&lt;/span&gt;</ept><![CDATA[

]]><bpt id="tjiid366-208">&lt;ul&gt;</bpt><bpt id="tjiid366-209">&lt;li&gt;</bpt><bpt id="tjiid366-210">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[We have credited QQ for encrypting messages in transit ]]><ept id="tjiid366-210">&lt;/span&gt;</ept><bpt id="tjiid366-212">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[(]]><ept id="tjiid366-212">&lt;/span&gt;</ept><bpt id="tjiid366-214">&lt;span style="color: #008000;"&gt;</bpt><![CDATA[✓]]><ept id="tjiid366-214">&lt;/span&gt;</ept><bpt id="tjiid366-216">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[). Though QQ does not use TLS/SSL, which is considered best practice, they have implemented a custom protocol for message encryption in transit.]]><ept id="tjiid366-216">&lt;/span&gt;</ept><ept id="tjiid366-209">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-219">&lt;li&gt;</bpt><bpt id="tjiid366-220">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt><![CDATA[We have clarified our scoring for forward secrecy (criterion #4).]]><ept id="tjiid366-220">&lt;/span&gt;</ept><ept id="tjiid366-219">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-208">&lt;/ul&gt;</ept><ept id="tjiid366-203">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-225">&lt;li&gt;</bpt><bpt id="tjiid366-226">&lt;strong style="line-height: 1.538em;"&gt;</bpt><![CDATA[2015-01-05]]><ept id="tjiid366-226">&lt;/strong&gt;</ept><bpt id="tjiid366-228">&lt;span style="line-height: 1.538em;"&gt;</bpt><![CDATA[ :]]><ept id="tjiid366-228">&lt;/span&gt;</ept><![CDATA[

]]><bpt id="tjiid366-230">&lt;ul&gt;</bpt><bpt id="tjiid366-231">&lt;li&gt;</bpt><bpt id="tjiid366-232">&lt;span style="line-height: 1.538em;"&gt;</bpt><![CDATA[We have split the scoring for Telegram into two rows: baseline Telegram and Telegram secret chats. Baseline Telegram chats are not end-to-end encrypted so that the provider can't read them (]]><ept id="tjiid366-232">&lt;/span&gt;</ept><bpt id="tjiid366-234">&lt;span style="color: #ff0000;" data-mce-mark="1"&gt;</bpt><![CDATA[✘]]><ept id="tjiid366-234">&lt;/span&gt;</ept><bpt id="tjiid366-236">&lt;span style="line-height: 1.538em;"&gt;</bpt><![CDATA[). Telegram secret chats are, and in addition Telegram now ]]><ept id="tjiid366-236">&lt;/span&gt;</ept><bpt id="tjiid366-238">&lt;a href="https://core.telegram.org/api/pfs" title="Telegram perfect forward secrecy blog post" style="line-height: 1.538em;"&gt;</bpt><![CDATA[supports perfect forward secrecy]]><ept id="tjiid366-238">&lt;/a&gt;</ept><bpt id="tjiid366-240">&lt;span style="line-height: 1.538em;"&gt;</bpt><![CDATA[ so that messages can be securely deleted (]]><ept id="tjiid366-240">&lt;/span&gt;</ept><bpt id="tjiid366-242">&lt;span style="color: #008000;" data-mce-mark="1"&gt;</bpt><![CDATA[✓]]><ept id="tjiid366-242">&lt;/span&gt;</ept><bpt id="tjiid366-244">&lt;span style="line-height: 1.538em;"&gt;</bpt><![CDATA[)]]><ept id="tjiid366-244">&lt;/span&gt;</ept><ept id="tjiid366-231">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-247">&lt;li&gt;</bpt><bpt id="tjiid366-248">&lt;span style="line-height: 1.538em;"&gt;</bpt><![CDATA[Wickr now provides the ability to verify contact's identities by exposing key fingerprints, which can be verified out-of-band or through in-band video. (]]><ept id="tjiid366-248">&lt;/span&gt;</ept><bpt id="tjiid366-250">&lt;span style="line-height: 1.538em;"&gt;</bpt><![CDATA[✓]]><ept id="tjiid366-250">&lt;/span&gt;</ept><bpt id="tjiid366-252">&lt;span style="line-height: 1.538em;"&gt;</bpt><![CDATA[)]]><ept id="tjiid366-252">&lt;/span&gt;</ept><ept id="tjiid366-247">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-230">&lt;/ul&gt;</ept><ept id="tjiid366-225">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-160">&lt;/ul&gt;</ept><bpt id="tjiid366-258">&lt;ul&gt;</bpt><bpt id="tjiid366-259">&lt;li&gt;</bpt><bpt id="tjiid366-260">&lt;strong&gt;</bpt><![CDATA[2014-11-14]]><ept id="tjiid366-260">&lt;/strong&gt;</ept><![CDATA[ :

]]><bpt id="tjiid366-262">&lt;ul&gt;</bpt><bpt id="tjiid366-263">&lt;li&gt;</bpt><![CDATA[RIM has told us that BlackBerry Messenger Protected uses an ]]><bpt id="tjiid366-264">&lt;a href="http://docs.blackberry.com/en/admin/deliverables/64972/BBM_Protected-Security_Note_en.pdf"&gt;</bpt><![CDATA[out-of-band passphrase exchange]]><ept id="tjiid366-264">&lt;/a&gt;</ept><![CDATA[ and ]]><bpt id="tjiid366-266">&lt;a href="https://en.wikipedia.org/wiki/SPEKE_(cryptography)"&gt;</bpt><![CDATA[EC-SPEKE]]><ept id="tjiid366-266">&lt;/a&gt;</ept><![CDATA[ to perform identity verification. (✓) RIM has also told us that BBM Protected receives security reviews by an internal security team. (✓)]]><ept id="tjiid366-263">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-269">&lt;li&gt;</bpt><![CDATA[Viber has received a recent external security audit from EY Advanced Security Center. (✓)]]><ept id="tjiid366-269">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-271">&lt;li&gt;</bpt><![CDATA[Pidgin has documented a number of auditing processes including regular use of static analysis tools and audits by a team at Cisco Talos. The Pidgin developers were clear that they do not know how thorough and complete these audits have been, but the audits nonetheless ]]><bpt id="tjiid366-272">&lt;a href="https://www.eff.org/deeplinks/2014/11/what-makes-good-security-audit"&gt;</bpt><![CDATA[meet our criteria]]><ept id="tjiid366-272">&lt;/a&gt;</ept><![CDATA[. (✓) Although auditing of Pidgin improves the security of the related Adium project (the projects share many components including libpurple, libotr, and libxml2), the Adium developers tell us that besides occasional static analysis by the developers themselves they are not aware of any independent auditing effort that addresses the Adium-specific code. So for the time being that project will not receive an audit checkmark.]]><ept id="tjiid366-271">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-262">&lt;/ul&gt;</ept><ept id="tjiid366-259">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-277">&lt;li&gt;</bpt><bpt id="tjiid366-278">&lt;strong&gt;</bpt><![CDATA[2014-11-10]]><ept id="tjiid366-278">&lt;/strong&gt;</ept><![CDATA[ : Skype check mark for end-to-end encryption ]]><bpt id="tjiid366-280">&lt;a href="https://www.eff.org/deeplinks/2014/11/scorecard-update-we-cannot-credit-skype-end-end-encryption"&gt;</bpt><![CDATA[removed]]><ept id="tjiid366-280">&lt;/a&gt;</ept><![CDATA[. (✘)]]><ept id="tjiid366-277">&lt;/li&gt;</ept><![CDATA[
	]]><bpt id="tjiid366-283">&lt;li&gt;</bpt><bpt id="tjiid366-284">&lt;strong&gt;</bpt><![CDATA[2014-11-04]]><ept id="tjiid366-284">&lt;/strong&gt;</ept><![CDATA[ : Snapchat app has audits from an internal security team. (✓)]]><ept id="tjiid366-283">&lt;/li&gt;</ept><![CDATA[
]]><ept id="tjiid366-258">&lt;/ul&gt;</ept><ept id="tjiid366-153">&lt;/div&gt;</ept></source>
     <target xml:lang="it"/>
     <note>Body</note>
    </trans-unit>
    <trans-unit id="366][body][0][summary" resname="366][body][0][summary">
     <source xml:lang="en"><bpt id="tjiid366-1">&lt;h3&gt;</bpt><![CDATA[Which apps and tools actually keep your messages safe?]]><ept id="tjiid366-1">&lt;/h3&gt;</ept><![CDATA[

]]><bpt id="tjiid366-3">&lt;div class="section"&gt;</bpt><![CDATA[

In the face of widespread Internet surveillance, we need a secure and practical means of talking to each other from our phones and computers. Many companies offer “secure messaging” products—but are these systems actually secure? We decided to find out, in the first phase of a new EFF Campaign for Secure &amp; Usable Crypto.

This scorecard represents only the first phase of the campaign. In later phases, we are planning to offer closer examinations of the usability and security of the tools that score the highest here. As such, ]]><bpt id="tjiid366-4">&lt;span style="text-decoration: underline;"&gt;</bpt><![CDATA[the results in the scorecard below should not be read as endorsements of individual tools or guarantees of their security]]><ept id="tjiid366-4">&lt;/span&gt;</ept><![CDATA[; they are merely indications that the projects are on the right track. For practical advice and tutorials on how to protect your online communication against surveillance, check out EFF's ]]><bpt id="tjiid366-6">&lt;a href="https://ssd.eff.org/"&gt;</bpt><![CDATA[Surveillance Self-Defense]]><ept id="tjiid366-6">&lt;/a&gt;</ept><![CDATA[ guide.

]]><ept id="tjiid366-3">&lt;/div&gt;</ept></source>
     <target xml:lang="it"/>
     <note>Summary</note>
    </trans-unit>
    <trans-unit id="366][title_field][0][value" resname="366][title_field][0][value">
     <source xml:lang="en"><![CDATA[Secure Messaging Scorecard]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="367">
    <note>HTTPS Everywhere (menu:item:1953)</note>
    <trans-unit id="367][menu:item:1953:title" resname="367][menu:item:1953:title">
     <source xml:lang="en"><![CDATA[HTTPS Everywhere]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="368">
    <note>Creating HTTPS Everywhere Rulesets (menu:item:1956)</note>
    <trans-unit id="368][menu:item:1956:title" resname="368][menu:item:1956:title">
     <source xml:lang="en"><![CDATA[Creating HTTPS Everywhere Rulesets]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="369">
    <note>HTTPS Everywhere Atlas (menu:item:7475)</note>
    <trans-unit id="369][menu:item:7475:title" resname="369][menu:item:7475:title">
     <source xml:lang="en"><![CDATA[HTTPS Everywhere Atlas]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="370">
    <note>How to Deploy HTTPS Correctly (menu:item:1955)</note>
    <trans-unit id="370][menu:item:1955:title" resname="370][menu:item:1955:title">
     <source xml:lang="en"><![CDATA[How to Deploy HTTPS Correctly]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="371">
    <note>Report Bugs / Hack On The Code (menu:item:1957)</note>
    <trans-unit id="371][menu:item:1957:title" resname="371][menu:item:1957:title">
     <source xml:lang="en"><![CDATA[Report Bugs / Hack On The Code]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="372">
    <note>FAQ (menu:item:1954)</note>
    <trans-unit id="372][menu:item:1954:title" resname="372][menu:item:1954:title">
     <source xml:lang="en"><![CDATA[FAQ]]></source>
     <target xml:lang="it"/>
     <note>Title</note>
    </trans-unit>
   </group>
   <group id="373">
    <note>HTTPS Everywhere is a Firef...</note>
    <trans-unit id="373][singular" resname="373][singular">
     <source xml:lang="en"><![CDATA[HTTPS Everywhere is a Firefox, Chrome, and Opera extension that encrypts your communications with many major websites, making your browsing more secure.]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="374">
    <note>Encrypt the web: Install HT...</note>
    <trans-unit id="374][singular" resname="374][singular">
     <source xml:lang="en"><![CDATA[Encrypt the web: Install HTTPS Everywhere today.]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="375">
    <note>Install in Firefox</note>
    <trans-unit id="375][singular" resname="375][singular">
     <source xml:lang="en"><![CDATA[Install in Firefox]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="376">
    <note>Install in Firefox for Android</note>
    <trans-unit id="376][singular" resname="376][singular">
     <source xml:lang="en"><![CDATA[Install in Firefox for Android]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="377">
    <note>Install in Chrome</note>
    <trans-unit id="377][singular" resname="377][singular">
     <source xml:lang="en"><![CDATA[Install in Chrome]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="378">
    <note>Install in Opera</note>
    <trans-unit id="378][singular" resname="378][singular">
     <source xml:lang="en"><![CDATA[Install in Opera]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="379">
    <note>Recent Releases</note>
    <trans-unit id="379][singular" resname="379][singular">
     <source xml:lang="en"><![CDATA[Recent Releases]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="380">
    <note>Stable releases for Firefox:</note>
    <trans-unit id="380][singular" resname="380][singular">
     <source xml:lang="en"><![CDATA[Stable releases for Firefox:]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="381">
    <note>Stable releases for Chrome,...</note>
    <trans-unit id="381][singular" resname="381][singular">
     <source xml:lang="en"><![CDATA[Stable releases for Chrome, Chromium, and Opera 15+:]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="382">
    <note>Changelog.txt</note>
    <trans-unit id="382][singular" resname="382][singular">
     <source xml:lang="en"><![CDATA[Changelog.txt]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="383">
    <note>Note: If you install the st...</note>
    <trans-unit id="383][singular" resname="383][singular">
     <source xml:lang="en"><![CDATA[Note: If you install the standalone .crx (i.e. not from the Chrome Web Store), and you are using Windows, Chrome will automatically disable the extension on each restart. You may be able to work around by using developer mode. See ]]><bpt id="tjiid383-1">&lt;a href="https://github.com/EFForg/https-everywhere/issues/819"&gt;</bpt><![CDATA[this issue]]><ept id="tjiid383-1">&lt;/a&gt;</ept><![CDATA[.]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="384">
    <note>Featured Tools</note>
    <trans-unit id="384][singular" resname="384][singular">
     <source xml:lang="en"><![CDATA[Featured Tools]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="385">
    <note>All Tools</note>
    <trans-unit id="385][singular" resname="385][singular">
     <source xml:lang="en"><![CDATA[All Tools]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="386">
    <note>Yes</note>
    <trans-unit id="386][singular" resname="386][singular">
     <source xml:lang="en"><![CDATA[Yes]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="387">
    <note>No</note>
    <trans-unit id="387][singular" resname="387][singular">
     <source xml:lang="en"><![CDATA[No]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="388">
    <note>Encrypted in transit?</note>
    <trans-unit id="388][singular" resname="388][singular">
     <source xml:lang="en"><![CDATA[Encrypted in transit?]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="389">
    <note>Encrypted so the provider c...</note>
    <trans-unit id="389][singular" resname="389][singular">
     <source xml:lang="en"><![CDATA[Encrypted so the provider can’t read it?]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="390">
    <note>Can you verify contacts’ id...</note>
    <trans-unit id="390][singular" resname="390][singular">
     <source xml:lang="en"><![CDATA[Can you verify contacts’ identities?]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="391">
    <note>Are past comms secure if yo...</note>
    <trans-unit id="391][singular" resname="391][singular">
     <source xml:lang="en"><![CDATA[Are past comms secure if your keys are stolen?]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="392">
    <note>Is the code open to indepen...</note>
    <trans-unit id="392][singular" resname="392][singular">
     <source xml:lang="en"><![CDATA[Is the code open to independent review?]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="393">
    <note>Is security design properly...</note>
    <trans-unit id="393][singular" resname="393][singular">
     <source xml:lang="en"><![CDATA[Is security design properly documented?]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
   <group id="394">
    <note>Has there been any recent c...</note>
    <trans-unit id="394][singular" resname="394][singular">
     <source xml:lang="en"><![CDATA[Has there been any recent code audit?]]></source>
     <target xml:lang="it"/>
     <note>Singular</note>
    </trans-unit>
   </group>
  </body>
 </file>
</xliff>
